1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 269> 270> 271> 272> 273> 274> 275> 276> 277> 278> 279> 280> 281> 282> 283> 284> 285> 286> 287> 288> 289> 290> 291> 292> 293> 294> 295> 296> 297> 298> 299> 300> 301> 302> 303> 304> 305> 306> 307> 308> 309> 310> 311> 312> 313> 314> 315> 316> 317> 318> 319> 320> 321> 322> 323> 324> 325> 326> 327> 328> 329> 330> 331> 332> 333> 334> 335> 336> 337> 338> 339> 340> 341> 342> 343> 344> 345> 346> 347> 348> 349> 350> 351> 352> 353> 354> 355> 356> 357> 358> 359> 360> 361> 362> 363> 364> 365> 366> 367> 368> 369> 370> 371> 372> 373> 374> 375> 376> 377> 378> 379> 380> 381> 382> 383> 384> 385> 386> 387> 388> 389> 390> 391> 392> 393> 394> 395> 396> 397> 398> 399> 400> 401> 402> 403> 404> 405> 406> 407> 408> 409> 410> 411> 412> 413> 414> 415> 416> 417> 418> 419> 420> 421> 422> 423> 424> 425> 426> 427> 428> 429> 430> 431> 432> 433> 434> 435> 436> 437> 438> 439> 440> 441> 442> 443> 444> 445> 446> 447> 448> 449> 450> 451> 452> 453> 454> 455> 456> 457> 458> 459> 460> 461> 462> 463> 464> 465> 466> 467> 468> 469> 470> 471> 472> 473> 474> 475> 476> 477> 478> 479> 480> 481> 482> 483> 484> 485> 486> 487> 488> 489> 490> 491> 492> 493> 494> 495> 496> 497> 498> 499> 500> 501> 502> 503> 504> 505> 506> 507> 508> 509> 510> 511> 512> 513> 514> 515> 516> 517> 518> 519> 520> 521> 522> 523> 524> 525> 526> 527> 528> 529> 530> 531> 532> 533> 534> 535> 536> 537> 538> 539> 540> 541> 542> 543> 544> 545> 546> 547> 548> 549> 550> 551> 552> 553> 554> 555> 556> 557> 558> 559> 560> 561> 562> 563> 564> 565> 566> 567> 568> 569> 570> 571> 572> 573> 574> 575> 576> 577> 578> 579> 580> 581> 582> 583> 584> 585> 586> 587> 588> 589> 590> 591> 592> 593> 594> 595> 596> 597> 598> 599> 600> 601> 602> 603> 604> 605> 606> 607> 608> 609> 610> 611> 612> 613> 614> Declare
   @w_idFormulario   Integer       = 9999,
   @w_idError        Integer       = 8161,
   @w_idUsuarioAct   Integer       = 1,
   @w_fechaAct       Smalldatetime = GetDate(),
   @w_ipAct          Varchar( 30)  = dbo.Fn_BuscaDireccionIP(),
   @w_mensaje        Varchar(250)  = 'Fecha Inicial es Mayor a la Fecha Final';

Begin
   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8162,
          @w_mensaje        = 'Fecha Inicial y la Fecha Final no estan en el mismo período';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8160,
          @w_mensaje        = 'Fecha Inicial y la Fecha Final no Pueden ser Nulo';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8163,
          @w_mensaje        = 'La suma de las Pólizas de esta fecha de captura está descuadrada. Por favor verifique Cargos y Abonos';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8164,
          @w_mensaje        = 'La suma de las Pólizas de esta fecha de captura están cuadradas.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8165,
          @w_mensaje        = 'Existen Pólizas Descuadradas en el Período.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End


   Select @w_idError        = 8166,
          @w_mensaje        = 'No Existen Pólizas Descuadradas en el Período.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End


   Select @w_idError        = 8167,
          @w_mensaje        = 'No existen Pólizas con errores en el Período.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End


   Select @w_idError        = 8168,
          @w_mensaje        = 'Existen Pólizas con errores en el Período.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8169,
          @w_mensaje        = 'El parametro de Referencia de Póliza y fecha de la Póliza son Obligatorio.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8170,
          @w_mensaje        = 'La Póliza seleccionada no es Válida.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8171,
          @w_mensaje        = 'El parámetro de tipo de consulta no es válido.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End

   Select @w_idError        = 8172,
          @w_mensaje        = 'No existen Datos para los registros seleccionados.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8021,
          @w_mensaje        = 'El ejercicio seleccionado no es válido.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8022,
          @w_mensaje        = 'El ejercicio seleccionado no está disponible.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8023,
          @w_mensaje        = 'El mes seleccionado no es válido.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8024,
          @w_mensaje        = 'El ejercicio y mes seleccionado no es válido.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8025,
          @w_mensaje        = 'El ejercicio y mes seleccionado no está habilitado.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8026,
          @w_mensaje        = 'No Existen Datos del ejercicio y mes seleccionado.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;


   Select @w_idError        = 8027,
          @w_mensaje        = 'El mes a procesar no es el último del período.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8028,
          @w_mensaje        = 'La Póliza Seleccionada esta descuadrada';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8029,
          @w_mensaje        = 'La cuenta de resultado no esta relacionada al catálogo de cuentas.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8030,
          @w_mensaje        = 'Existen Sucursales sin La cuenta de resultado relacionada.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Select @w_idError        = 8031,
          @w_mensaje        = 'El mes a procesar no es el último mes del período.';

   If Not Exists ( Select Top 1 1
                   From   dbo.catMensajesErroresTbl
                   Where  idFormulario = @w_idFormulario
                   And    idError      = @w_idError)
      Begin
         Insert Into dbo.catMensajesErroresTbl
         (idFormulario, idError, mensaje, idUsuarioAct,
          fechaAct,     ipAct)
         Select @w_idFormulario, @w_idError, @w_mensaje, @w_idUsuarioAct,
                @w_fechaAct,     @w_ipAct;
      End
   Else
      Begin
         Update dbo.catMensajesErroresTbl
         Set    mensaje      = @w_mensaje,
                idUsuarioAct = @w_idUsuarioAct,
                fechaAct     = @w_fechaAct,
                ipAct        = @w_ipAct
         Where  idFormulario = @w_idFormulario
         And    idError      = @w_idError;
      End;

   Return;

End;
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> Declare
   @w_id             Integer       = 350,
   @w_valor          Integer       = 4,
   @w_estatus        Smallint      = 1,
   @w_cadena         Varchar( 30)  = Null,
   @w_descripcion    Varchar(250)  = 'Usuario Proceso Bath';

Begin

   If Not Exists ( Select Top 1 1
                   From   dbo.parametros With (Nolock)
                   Where  id  = @w_id)
      Begin
         Insert Into dbo.parametros
         (id, descripcion, valor, cadena, estatus)
         Select @w_id,     @w_descripcion, @w_valor,
                @w_cadena, @w_estatus;
      End
   Else
      Begin
         Update dbo.parametros
         Set    descripcion      = @w_descripcion,
                valor            = @w_valor,
                estatus          = @w_estatus,
                cadena           = @w_cadena
         Where  id           = @w_id;
      End

   Select @w_id            = 351,
          @w_valor         = 16,
          @w_descripcion   = 'Longitud Llave contable';

   If Not Exists ( Select Top 1 1
                   From   dbo.parametros With (Nolock)
                   Where  id  = @w_id)
      Begin
         Insert Into dbo.parametros
         (id, descripcion, valor, cadena, estatus)
         Select @w_id,     @w_descripcion, @w_valor,
                @w_cadena, @w_estatus;
      End
   Else
      Begin
         Update dbo.parametros
         Set    descripcion      = @w_descripcion,
                valor            = @w_valor,
                estatus          = @w_estatus,
                cadena           = @w_cadena
         Where  id           = @w_id;
      End

   Return;

End;
(1 row affected)
(1 row affected)
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 269> 270> 271> 272> 273> 274> 275> 276> 277> 278> 279> 280> 281> 282> 283> 284> 285> 286> 287> 288> 289> 290> 291> 292> 293> 294> 295> 296> 297> 298> 299> 300> 301> 302> 303> 304> 305> 306> 307> 308> 309> 310> 311> 312> 313> 314> 315> 316> 317> 318> 319> 320> 321> 322> 323> 324> 325> 326> 327> 328> 329> 330> 331> 332> 333> 334> 335> 336> 337> 338> 339> 340> 341> 342> 343> 344> 345> 346> 347> 348> 349> 350> 351> 352> 353> 354> 355> 356> 357> 358> 359> 360> 361> 362> 363> 364> 365> 366> 367> 368> 369> 370> 371> 372> 373> 374> 375> 376> 377> 378> 379> 380> 381> 382> 383> 384> 385> 386> 387> 388> 389> 390> 391> 392> 393> 394> 395> 396> 397> 398> 399> 400> 401> 402> 403> 404> 405> 406> 407> 408> 409> 410> 411> 412> 413> 414> 415> 416> 417> 418> 419> 420> 421> 422> 423> 424> 425> 426> 427> 428> 429> 430> 431> 432> 433> 434> 435> 436> 437> 438> 439> 440> 441> 442> 443> 444> 445> 446> 447> 448> 449> 450> 451> 452> 453> 454> 455> 456> 457> 458> 459> 460> 461> 462> 463> 464> 465> 466> 467> 468> 469> 470> 471> 472> 473> 474> 475> 476> 477> 478> 479> 480> 481> 482> 483> 484> 485> 486> 487> 488> 489> 490> 491> 492> 493> 494> 495> 496> 497> 498> 499> 500> 501> 502> 503> 504> 505> 506> 507> 508> 509> 510> 511> 512> 513> 514> 515> 516> 517> 518> 519> 520> 521> 522> 523> 524> 525> 526> 527> 528> 529> 530> 531> 532> 533> 534> 535> 536> 537> 538> 539> 540> 541> 542> 543> 544> 545> 546> 547> 548> 549> 550> 551> 552> 553> 554> 555> 556> 557> 558> 559> 560> 561> 562> 563> 564> 565> 566> 567> 568> 569> 570> 571> 572> 573> 574> 575> 576> 577> 578> 579> 580> 581> 582> 583> 584> 585> 586> 587> 588> 589> 590> 591> 592> 593> 594> 595> 596> 597> 598> 599> 600> 601> 602> 603> 604> 605> 606> 607> 608> 609> 610> 611> 612> 613> 614> 615> 616> 617> 618> 619> 620> 621> 622> 623> 624> 625> 626> 627> 628> 629> 630> 631> 632> 633> 634> 635> 636> 637> 638> 639> 640> 641> 642> 643> 644> 645> 646> 647> 648> 649> 650> 651> 652> 653> 654> 655> 656> 657> 658> 659> 660> 661> 662> 663> 664> 665> 666> 667> 668> 669> 670> 671> 672> 673> 674> 675> 676> 677> 678> 679> 680> 681> 682> 683> 684> 685> 686> 687> 688> 689> 690> 691> 692> 693> 694> 695> 696> 697> 698> 699> 700> 701> 702> 703> 704> 705> 706> 707> 708> 709> 710> 711> 712> 713> 714> 715> 716> 717> 718> 719> 720> 721> 722> 723> 724> 725> 726> 727> 728> 729> 730> 731> 732> 733> 734> 735> 736> 737> 738> 739> 740> 741> 742> 743> 744> 745> 746> 747> 748> 749> 750> 751> 752> 753> 754> 755> 756> 757> 758> 759> 760> 761> 762> 763> 764> 765> 766> 767> 768> 769> 770> 771> 772> 773> 774> 775> 776> 777> 778> 779> 780> 781> 782> 783> 784> 785> 786> 787> 788> 789> 790> 791> 792> 793> 794> 795> 796> 797> 798> 799> 800> 801> 802> 803> 804> 805> 806> 807> 808> 809> 810> 811> 812> 813> 814> 815> 816> 817> 818> 819> 820> 821> 822> 823> 824> 825> 826> 827> 828> 829> 830> 831> 832> 833> 834> 835> 836> 837> 838> 839> 840> 841> 842> 843> 844> 845> 846> 847> 848> 849> 850> 851> 852> 853> 854> 855> 856> 857> 858> 859> 860> 861> 862> 863> 864> 865> 866> 867> 868> 869> 870> 871> 872> 873> 874> 875> 876> 877> 878> 879> 880> 881> 882> 883> 884> 885> 886> 887> 888> 889> 890> 891> 892> 893> 894> 895> 896> 897> 898> 899> 900> 901> 902> 903> 904> 905> 906> 907> 908> 909> 910> 911> 912> 913> 914> 915> 916> 917> 918> 919> 920> 921> 922> 923> 924> 925> 926> 927> 928> 929> 930> 931> 932> 933> 934> 935> 936> 937> 938> 939> 940> 941> 942> 943> 944> 945> 946> 947> 948> 949> 950> 951> 952> 953> 954> 955> 956> 957> 958> 959> 960> 961> 962> 963> 964> 965> 966> 967> 968> 969> 970> 971> 972> 973> 974> 975> 976> 977> 978> 979> 980> 981> 982> 983> 984> 985> 986> 987> 988> 989> 990> 991> 992> 993> 994> 995> 996> 997> 998> 999> 1000> 1001> 1002> 1003> 1004> 1005> 1006> 1007> 1008> 1009> 1010> 1011> 1012> 1013> 1014> 1015> 1016> 1017> 1018> 1019> 1020> 1021> 1022> 1023> 1024> 1025> 1026> 1027> 1028> 1029> 1030> 1031> 1032> 1033> 1034> 1035> 1036> 1037> 1038> 1039> 1040> 1041> 1042> 1043> 1044> 1045> 1046> 1047> 1048> 1049> 1050> 1051> 1052> 1053> 1054> 1055> 1056> 1057> 1058> /*

-- Declare
   -- @PnAnio                Smallint            = 2024,
   -- @PnIdMes               Tinyint             = 7,
   -- @PnmesCer              Integer             = 7,
   -- @PsCondicion           Varchar(500)        = ' And Cast(P.Fecha_Mov As Date) Between ' + Char(39) + '2024-07-31' + + Char(39) + ' And ' + Char(39) + '2024-07-31' + Char(39),
   -- @PnEstatus             Integer             = 0,
   -- @PsMensaje             Varchar( 250)       = ' ' ;
-- Begin

   -- Execute dbo.Spp_AplicaPolizas @PnAnio      = @PnAnio,
                                 -- @PnIdMes     = @PnIdMes,
                                 -- @PnmesCer    = @PnmesCer,
                                 -- @PsCondicion = @PsCondicion,
                                 -- @PnEstatus   = @PnEstatus Output,
                                 -- @PsMensaje   = @PsMensaje Output;

   -- Select @PnEstatus, @PsMensaje
   -- Return
-- End
-- Go

*/

/*
-- Fecha: 24/Noviembre/2022
-- Autor: Desconocido
-- Task: N/A
-- Observaciones: Proceso que realiza actualizacion de cargos y abonos por proceso de acuerdo a condiciones.

-- MODIFICACIONES:
-- V1.0. [Zayra Mtz. Candia].[24Nov2022]. Se quita comentario a la linea 82, donde estaba comentado la variable de la condicion.

-- Fecha:         17/08/20
-- Programador:   Pedro Zambrano
-- Observaciones: Se hace reingrenierÃ­a al proceso de aplicaciÃ³n de pÃ³lizas a cargos y abonos.
-- Pro Original:  sp_poliza.

*/

Create Or Alter Procedure dbo.Spp_AplicaPolizas
   (@PnAnio              Smallint,
    @PnIdMes             Tinyint,
    @PnmesCer            Integer           = 0,
    @PsCondicion         Varchar(500),
    @PnEstatus           Integer           = 0    Output,
    @PsMensaje           Varchar( 250)     = ' '  Output)
As

Declare
    @w_Error             Integer,
    @w_linea             Integer,
    @w_operacion         Integer,
    @w_sucursal          Integer,
    @w_region            Integer,
    @w_minIdF            Integer,
    @w_maxIdF            Integer,
    @w_countReg          Integer,
    @w_comilla           Char(1),
    @w_clave             Char(1),
    @w_moneda_id         Varchar(  2),
    @w_desc_error        Varchar(250),
    @w_sql               Varchar(Max),
    @w_llave             Varchar( 16),
    @w_nivel             varchar(  2),
    @w_sector            Varchar(  2),
    @w_NCta              Varchar( 16),
    @w_Aux               Varchar( 16),
    @w_ctaMayor          Varchar( 16),
    @w_SubCta            Varchar( 16),
    @w_SSubCta           Varchar( 16),
    @w_SSSubCta          Varchar( 16),
    @w_Ceros             Varchar( 16),
    @w_importe           Decimal(18, 2),
    @w_poliza            Sysname,
    @w_movimientos       Sysname,
    @w_catalogo          Sysname,
    @w_catalagoAux       Sysname,
    @w_catReporte        Sysname,
    @w_catAuxReporte     Sysname,
    @w_idEstatus         Tinyint,
    @w_fechaCaptura      Datetime,
--
    @w_consulta          Nvarchar(1500),
    @w_param             NVarchar( 750),
    @w_existe            Integer;

Begin
   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    Off

   Select @PnEstatus         = 0,
          @PsMensaje         = Null,
          @w_operacion       = 9999,
          @w_minIdF          = 0,
          @w_countReg        = 0,
          @w_comilla         = Char(39),
          @w_Ceros           = Replicate('0', 16),
          @w_fechaCaptura    = Getdate(),
          @w_poliza          = 'PolizaAnio',
          @w_movimientos     = 'MovimientosAnio',
          @w_catalogo        = 'catalogo',
          @w_catalagoAux     = 'catalogoAuxiliar',
          @w_catReporte      = 'catalogoReporteTbl',
          @w_catAuxReporte   = 'catalogoAuxReporteTbl';

--
-- Validaciones
--

   Select  Top 1 @w_idEstatus = idEstatus
   From    dbo.ejercicios With (Nolock)
   Where   ejercicio = @PnAnio;
   If @@Rowcount = 0
      Begin
         Select @PnEstatus  = 8021,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

   If @w_idEstatus != 1
      Begin
         Select @PnEstatus  = 8022,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

   If Not Exists ( Select Top 1 1
                   From   dbo.catCriteriosTbl Whith (Nolock)
                   Where  criterio = 'mes'
                   And    valor    = @PnIdMes)
      Begin
         Select @PnEstatus  = 8023,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

--
-- CreaciÃ³n de Tabla Temporal
--

   If Object_Id('tempdb..#tmpFilter') Is Null
      Begin
         Create Table #tmpFilter
        (Id               Integer identity(1,1) Not Null Primary key,
         Llave            Varchar(16),
         Importe          Decimal(18, 2),
         Clave            Char(1),
         Sector_id        Varchar(2),
         Sucursal_id      Integer,
         Region_id        Integer,
         moneda_id        Varchar( 2),
         Index tmpFilterIdxo1 (llave))
      End



-- DepuraciÃ³n de CatÃ¡logos.

   Set @w_sql = 'Update dbo.' + @w_catalogo + ' ' +
                'Set    CarExt        = 0, ' +
                       'CarProceso    = 0, ' +
                       'AboExt        = 0, ' +
                       'AboProceso    = 0 '  +
                'Where Ejercicio   = ' + Cast(@PnAnio      As Varchar) + ' ' +
                'And   Mes         = ' + Cast(@PnIdMes     As Varchar)

   Begin Try
      Execute (@w_sql)
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual )
         Select 'ERROR 4', @w_error,     @w_desc_error, getdate();

         Set Xact_Abort Off
         Return
      End

-- DepuraciÃ³n de CatÃ¡logos Auxiliares.

   Set @w_sql = 'Update dbo.' + @w_catalagoAux + ' ' +
                'Set    CarExt        = 0, ' +
                       'CarProceso    = 0, ' +
                       'AboExt        = 0, ' +
                       'AboProceso    = 0 '  +
                'Where Ejercicio   = ' + Cast(@PnAnio      As Varchar) + ' ' +
                'And   Mes         = ' + Cast(@PnIdMes     As Varchar)

   Begin Try
      Execute (@w_sql)
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual )
         Select 'ERROR 5', @w_error,     @w_desc_error, getdate();

         Set Xact_Abort Off
         Return
      End

-- Inicio del proceso de generacion de polizas

   Set @w_sql = 'Select m.Llave, Round(Sum(m.Importe),2,0), m.Clave, m.Sector_id, m.Sucursal_id, m.Region_id, m.moneda ' +
                'From   dbo.' + @w_poliza      + ' p With (Nolock) ' +
                'Join   dbo.' + @w_movimientos + ' m With (Nolock) ' +
                'On     m.Referencia              = p.Referencia ' +
                'And    Cast(m.fecha_Mov As Date) = Cast(p.fecha_mov As Date) '+
                'And    m.ejercicio               = p.ejercicio '+
                'And    m.mes                     = p.mes ' +
                'Where  1 = 1 ' + @PsCondicion + ' ' +
                'And    p.ejercicio               = ' + Cast(@PnAnio  As Varchar) + ' ' +
                'And    p.mes                     = ' + Cast(@PnIdMes As Varchar) + ' ' +
                'Group By m.Llave, m.Moneda, m.Clave, m.Sector_id, m.Sucursal_id, m.Region_id, m.moneda '

   Begin Try
      Insert Into #tmpFilter
     (Llave, Importe, Clave, Sector_id, Sucursal_id, Region_id, moneda_id)
      Execute (@w_sql)
      Set @w_maxIdF = @@Identity
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual )
         Select 'ERROR 6', @w_error,     @w_desc_error, getdate();

         Set Xact_Abort Off
         Return
      End

   While @w_minIdF <= @w_maxIdF
   Begin
      Set @w_minIdF += 1

      Select @w_llave      = Llave,
             @w_importe    = Importe,
             @w_sector     = Sector_id,
             @w_sucursal   = Sucursal_id,
             @w_clave      = Clave,
             @w_region     = Region_id,
             @w_moneda_id  = moneda_id
      From   #tmpFilter
      Where  Id = @w_minIdF
      If @@Rowcount = 0
         Begin
            Break
         End

      Select @w_Aux      = Substring  (@w_llave, 11, 6)                  ,
             @w_NCta     = Substring  (@w_llave,  7, 2)                  , -- Valor 00
             @w_SSSubCta = Concat(Left(@w_llave, 10), Right(@w_Ceros,6)) , -- Variable que se encarga de la SSSubCta--
             @w_SSubCta  = Concat(Left(@w_llave, 8) , Right(@w_Ceros,8)) , -- Variable que se encarga de la SSubCta--
             @w_SubCta   = Concat(Left(@w_llave, 6) , Right(@w_Ceros,10)), -- Variable que se encarga de la SubCta--
             @w_ctaMayor = Concat(Left(@w_llave, 4) , Right(@w_Ceros,12))  -- Variable que se encarga de la Cta Mayor


-- COMPARACION DEL MES EN CURSO Y MES CERRADO--
-- Si el mes en curso es igual al mes cerrado, solo se va actualizar los catalogos contables.
-- CatÃ¡logo Consolidado, Catalogo y Catalogo Auxiliar.

-- INICIO DE LA COMPARACION DEL MES, CUANDO CUMPLE CON LA CONDICION

      If @PnIdMes = @PnmesCer
         Begin
         --COMPARACION DE CLAVE SEA IGUAL A C
         --En SICCORP se manejan dos tipos de Clave.
         --El primer tipo es C corresponde a CARGO.

            If @w_sucursal = 0
               Begin
                  Set @w_sql = 'Update dbo.' + @w_catalogo + ' '       +
                               'Set ' + Case When @w_clave = 'C'
                                             Then + ' CarExt        = CarExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                                    ' CarProceso    = CarProceso + ' + Convert(Varchar, @w_importe) + ' '
                                             Else + ' AboExt        = AboExt + '     + Convert(Varchar, @w_importe) + ', '         +
                                                    ' AboProceso    = AboProceso + ' + Convert(Varchar, @w_importe) + ' '
                                        End

                  Set @w_sql = @w_sql   + 'Where Llave       = ' + @w_comilla  + @w_llave        + @w_comilla + ' ' +
                                          'And   Moneda      = ' + Cast(@w_moneda_id As Varchar) + ' ' +
                                          'And   Ejercicio   = ' + Cast(@PnAnio      As Varchar) + ' ' +
                                          'And   Mes         = ' + Cast(@PnIdMes     As Varchar) + ' ';


                  Begin Try
                     Execute(@w_sql)
                  End Try

                  Begin Catch
                     Select @w_Error      = @@Error,
                            @w_linea      = Error_line(),
                            @w_desc_error = Substring (Error_Message(), 1, 200)
                  End Catch

                  If IsNull(@w_error, 0) <> 0
                     Begin
                        Select @PnEstatus = @w_error,
                               @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                        Insert Into dbo.Bitacora_CargosAbonos
                        (mensaje, idError, mensajeError, ultActual )
                        Values ('ERROR 9', @w_error, @w_desc_error, getdate());

                        Set Xact_Abort Off
                        Return
                     End
               End

            Set @w_sql = 'Update ' + @w_catalagoAux + ' '                                                               +
                         'Set ' + Case When @w_clave = 'C'
                                       Then ' CarExt        = CarExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                            ' CarProceso    = CarProceso + ' + Convert(Varchar, @w_importe) + ' '
                                       Else ' AboExt        = AboExt + '     + Convert(Varchar, @w_importe) + ', '     +
                                            ' AboProceso    = AboProceso + ' + Convert(Varchar, @w_importe) + ' '
                                       End

            Set @w_sql = @w_sql + 'Where Llave       = ' + @w_comilla + @w_llave  + @w_comilla    + ' ' +
                                  'And   Moneda      = ' + Convert(Varchar, @w_moneda_id)         + ' ' +
                                  'And   Sucursal_id = ' + Convert(Varchar, @w_sucursal)          + ' ' +
                                  'And   Sector_id   = ' + Convert(Varchar, @w_Sector)            + ' ' +
                                  'And   Region_id   = ' + Convert(Varchar, @w_region)            + ' ' +
                                  'And   Ejercicio   = ' + Convert(Varchar, @PnAnio)              + ' ' +
                                  'And   mes         = ' + Convert(Varchar, @PnIdMes)

            Begin Try
               Execute(@w_sql)
            End Try

            Begin Catch

               Select @w_error      = Error_Number(),
                      @w_linea      = Error_line(),
                      @w_desc_error = Error_Message()
            End Catch

            If IsNull(@w_error, 0) <> 0
               Begin
                  Select @PnEstatus = @w_error,
                         @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                  Insert Into dbo.Bitacora_CargosAbonos
                  (mensaje, idError, mensajeError, ultactual)
                  Values ('ERROR 11', @w_error, @w_desc_error, getdate());

                  Set Xact_Abort Off
                  Return
               End

-- Actualiza los saldos de la subcta y cuenta mayor correspondiente, en el catalogoo.

            If @w_sucursal = 0
               Begin
                  Set @w_sql =  'Update dbo.' + @w_catalogo + ' '                                                     +
                                'Set ' + Case When @w_clave = 'C'
                                              Then 'CarExt     = CarExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                                   'CarProceso = CarProceso + ' + Convert(Varchar, @w_importe) + ' '
                                              Else 'AboExt     = AboExt     + ' + Convert(Varchar, @w_importe) + ', ' +
                                                   'AboProceso = AboProceso + ' + Convert(Varchar, @w_importe) + ' '
                                         End
                  
                  Set @w_sql = @w_sql + 'Where Niv      = 0 '                                                         +
                                        'And   Llave   In (' + Case When @w_NCta = '00'
                                                                    Then @w_comilla + @w_SubCta   + @w_comilla + ', ' +
                                                                         @w_comilla + @w_ctaMayor + @w_comilla
                                                                    Else @w_comilla + @w_SSSubCta + @w_comilla + ', ' +
                                                                         @w_comilla + @w_SSubCta  + @w_comilla + ', ' +
                                                                         @w_comilla + @w_SubCta   + @w_comilla +' , ' +
                                                                         @w_comilla + @w_ctaMayor      + @w_comilla
                                                               End + ') ' +
                                        'And   Moneda      = ' + Convert(Varchar, @w_moneda_id) + ' ' +
                                        'And   Ejercicio   = ' + Convert(Varchar, @PnAnio)      + ' ' +
                                        'And   mes         = ' + Convert(Varchar, @PnIdMes)
                  
                  Begin Try
                     Execute(@w_sql)
                  End Try
                  
                  Begin Catch
                     Select @w_error      = Error_Number(),
                            @w_linea      = Error_line(),
                            @w_desc_error = Error_Message()
                  
                  End Catch
                  
                  If IsNull(@w_error, 0) <> 0
                     Begin
                        Select @PnEstatus = @w_error,
                               @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);
                  
                            Insert Into dbo.Bitacora_CargosAbonos
                            (mensaje, idError, mensajeError, ultactual )
                            Values ('ERROR 12', @w_error, @w_desc_error, @w_fechaCaptura);
                  
                            Set Xact_Abort Off
                            Return
                     End
               End

         End

-- CUANDO NO CUMPLE CON LA CONDICION DE LOS MESES QUE SEAN IGUALES--
-- SI el mes en curso NO es igual al mes cerrado, se va actualizar los catalogos contables y
--    se realiza un registro de los importes en las tablas de registros.
-- Catalogo Contable CATMESAÃO y Catalogo Auxiliar CATAUXMESAÃO, correspondiente al mes.

      Else
         Begin
-- ELSE SI LOS MESES NO SON IGUALES
-- SI NO EXISTE, SE UTILIZA EN LA SENTENCIA Insert,
-- PARA AÃADIR UN ELEMENTO, EVITANDOAÃADIR REGISTROS DUPLICADOS

            If @w_sucursal = 0
               Begin
                  Set @w_sql = 'Update ' + @w_catalogo     + ' '                                                     +
                               'Set ' + Case When @w_clave = 'C'
                                             Then 'CarExt     = CarExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                                  'CarProceso = CarProceso + ' + Convert(Varchar, @w_importe) + ' '
                                             Else 'AboExt     = AboExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                                  'AboProceso = AboProceso + ' + Convert(Varchar, @w_importe) + ' '
                                        End
                  
                  Set @w_sql = @w_sql   + 'Where Llave       = ' + @w_comilla  + @w_llave        + @w_comilla + ' ' +
                                          'And   Moneda      = ' + Cast(@w_moneda_id As Varchar) + ' ' +
                                          'And   Ejercicio   = ' + Cast(@PnAnio      As Varchar) + ' ' +
                                          'And   Mes         = ' + Cast(@PnIdMes     As Varchar);
                  
                  Begin try
                     Execute (@w_sql)
                  End Try
                  
                  Begin Catch
                     Select @w_error      = Error_Number(),
                            @w_linea      = Error_line(),
                            @w_desc_error = Error_Message()
                  
                  End Catch
                  
                  If IsNull(@w_error, 0) <> 0
                     Begin
                        Select @PnEstatus = @w_error,
                               @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);
                  
                        Insert Into dbo.Bitacora_CargosAbonos
                        (mensaje, idError, mensajeError, ultactual )
                        Values ('ERROR 14 ', @w_error, @w_desc_error, @w_fechaCaptura);
                  
                        Set Xact_Abort Off
                        Return
                     End
                End

--Inserta en la tabla CATAUXREPAÃO, la cta, sucursal y region correspondiente saldo cero, en el mes en curso.

            Set @w_sql = 'If Not Exists (Select Top 1 1 '          +
                                        'From   dbo.' + @w_catAuxReporte + ' With (Nolock) '             +
                                        'Where  Ejercicio   = ' + Cast(@PnAnio  As Varchar)              + ' ' +
                                        'And    mes         = ' + Cast(@PnIdMes As Varchar)              + ' '  +
                                        'And    Llave       = ' + @w_comilla + @w_llave     + @w_comilla + ' '  +
                                        'And    Moneda_id   = ' + Cast(@w_moneda_id As Varchar)          + ' '  +
                                        'And    Sector_id   = ' + @w_comilla + @w_sector + @w_comilla    + ' '  +
                                        'And    Sucursal_id = ' + Convert(Varchar, @w_sucursal)          + ' '  +
                                        'And    Region_id   = ' + Convert(Varchar, @w_region)            + ') ' +
                            'Begin '                                                                     +
                               'Insert Into dbo.' + @w_catAuxReporte + ' '                                   +
                              '(Ejercicio, Mes,       Llave,       moneda_id, '                          +
                               'nivel,     Sector_id, Sucursal_id, Region_id, '                          +
                               'SAct,      FecCap) '                                                     +
                               'Select ' + Cast(@PnAnio As Varchar) + ', ' + Cast(@PnIdMes As Varchar)   + ', ' +
                                           @w_comilla + @w_llave  + @w_comilla                           + ', ' +
                                           Cast(@w_moneda_id As Varchar)   + ', 1 nivel, '               +
                                           @w_comilla + @w_sector + @w_comilla                           + ', ' +                                                                                                             +
                                           Cast(@w_sucursal As Varchar)                                  + ', ' +
                                           Cast(@w_region   As Varchar)                                  + ', ' +
                                           Cast(@w_importe  As Varchar)                                  + ', ' +
                                           @w_comilla + Cast(@w_fechaCaptura As Varchar) + @w_comilla    + ' '  +                                              +
                            'End '                                                                       +
                         'Else '                                                                         +
                            'Begin  '                                                                    +
                               'Update  dbo.' + @w_catAuxReporte                                         + ' '  +
                               'Set   SAct = SAct + ' + Case When @w_clave = 'C'
                                                             Then Convert(Varchar, @w_importe)
                                                             Else Convert(Varchar, -@w_importe)
                                                         End + ' ' +
                               'Where  Ejercicio   = ' + Cast(@Pnanio  As Varchar)                       + ' '   +
                               'And    mes         = ' + Cast(@PnIdMes As Varchar)                       + ' '   +
                               'And    Llave       = ' + @w_comilla + @w_llave     + @w_comilla          + ' '   +
                               'And    Moneda_id   = ' + Cast(@w_moneda_id As Varchar)                   + ' '   +
                               'And    Sector_id   = ' + @w_comilla + @w_sector + @w_comilla             + ' '   +
                               'And    Sucursal_id = ' + Convert(Varchar, @w_sucursal)                   + ' '   +
                               'And    Region_id   = ' + Convert(Varchar, @w_region)                     + ' '   +
                        'End '

            Begin try
               Execute (@w_sql)
            End Try

            Begin Catch
               Select @w_error      = Error_Number(),
                      @w_linea      = Error_line(),
                      @w_desc_error = Error_Message()

            End Catch

            If IsNull(@w_error, 0) <> 0
               Begin
                  Select @PnEstatus = @w_error,
                         @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                  Insert Into dbo.Bitacora_CargosAbonos
                  (mensaje, idError, mensajeError, ultactual )
                  Values ('ERROR 16 ', @w_error, @w_desc_error, @w_fechaCaptura);

                  Set Xact_Abort Off
                  Return
               End

            Set @w_sql = 'Update dbo.' + @w_catalagoAux                                               + ' '                                            +
                         'Set ' + Case When @w_clave = 'C'
                                       Then 'CarExt     = CarExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                            'CarProceso = CarProceso + ' + Convert(Varchar, @w_importe)
                                       Else 'AboExt     = AboExt + '     + Convert(Varchar, @w_importe) + ', ' +
                                            'AboProceso = AboProceso + ' + Convert(Varchar, @w_importe)
                                  End + ' '

            Set @w_sql = @w_sql + 'Where Llave       = ' + @w_comilla + @w_llave  + @w_comilla    + ' ' +
                                  'And   Moneda      = ' + Convert(Varchar, @w_moneda_id)         + ' ' +
                                  'And   Sucursal_id = ' + Convert(Varchar, @w_sucursal)          + ' ' +
                                  'And   Sector_id   = ' + Convert(Varchar, @w_Sector)            + ' ' +
                                  'And   Region_id   = ' + Convert(Varchar, @w_region)            + ' ' +
                                  'And   Ejercicio   = ' + Convert(Varchar, @PnAnio)              + ' ' +
                                  'And   mes         = ' + Convert(Varchar, @PnIdMes)

            Begin try
               Execute (@w_sql)
            End Try

            Begin Catch
               Select @w_error      = Error_Number(),
                      @w_linea      = Error_line(),
                      @w_desc_error = Error_Message()

            End Catch

            If IsNull(@w_error, 0) <> 0
               Begin
                  Select @PnEstatus = @w_error,
                         @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                  Insert Into dbo.Bitacora_CargosAbonos
                  (mensaje, idError, mensajeError, ultactual )
                  Values ('ERROR 17 ', @w_error, @w_desc_error, @w_fechaCaptura);

                  Set Xact_Abort Off
                  Return
               End

            Set @w_sql = 'If Not Exists (Select Top 1 1 '                                                  +
                                        'From   dbo.' + @w_catAuxReporte + ' With (Nolock) '               +
                                        'Where  Ejercicio   = '   + Cast(@PnAnio  As Varchar)              + ' ' +
                                        'And    mes         = '   + Cast(@PnIdMes As Varchar)              + ' '  +
                                        'And    Llave       = '   + @w_comilla + @w_llave     + @w_comilla + ' '  +
                                        'And    Moneda_id   = '   + Cast(@w_moneda_id As Varchar)          + ' '  +
                                        'And    Sector_id   = '   + @w_comilla + '00' + @w_comilla         + ' '  +
                                        'And    Sucursal_id = 0 '                                          +
                                        'And    Region_id   = 0) '                                          +
                            'Begin  '                                                                                                                       +
                               'Insert Into dbo.' + @w_catAuxReporte + ' '                                   +
                              '(Ejercicio, Mes,       Llave,       moneda_id, '                          +
                               'nivel,     Sector_id, Sucursal_id, Region_id, '                          +
                               'SAct,      FecCap) '                                                     +
                               'Select ' + Cast(@PnAnio As Varchar) + ', ' + Cast(@PnIdMes As Varchar)   + ', ' +
                                           @w_comilla + @w_llave  + @w_comilla                           + ', ' +
                                           Cast(@w_moneda_id As Varchar)   + ', 1 nivel, '               +
                                           @w_comilla + '00' + @w_comilla                                + ', ' +                                                                                                             +
                                           '0 sucursal, 0 region, '                                      + ' '  +
                                           Cast(@w_importe  As Varchar)                                  + ', ' +
                                           @w_comilla + Cast(@w_fechaCaptura As Varchar) + @w_comilla    + ' '  +                                              +
                            'End '                                                                       +
                         'Else '                                                                         +
                            'Begin  '                                                                    +
                               'Update  dbo.' + @w_catAuxReporte                                         + ' '  +
                               'Set   SAct = SAct + ' + Case When @w_clave = 'C'
                                                             Then Convert(Varchar, @w_importe)
                                                             Else Convert(Varchar, -@w_importe)
                                                         End + ' ' +
                               'Where  Ejercicio   = ' + Cast(@Pnanio  As Varchar)                       + ' '   +
                               'And    mes         = ' + Cast(@PnIdMes As Varchar)                       + ' '   +
                               'And    Llave       = ' + @w_comilla + @w_llave     + @w_comilla          + ' '   +
                               'And    Moneda_id   = ' + Cast(@w_moneda_id As Varchar)                   + ' '   +
                               'And    Sector_id   = ' + @w_comilla + '00' + @w_comilla                  + ' '  +
                               'And    Sucursal_id = 0 '                                                 +
                               'And    Region_id   = 0 '                                                 +
                        'End '

            Begin try
               Execute (@w_sql)
            End Try

            Begin Catch
               Select @w_error      = Error_Number(),
                      @w_linea      = Error_line(),
                      @w_desc_error = Error_Message()

            End Catch

            If IsNull(@w_error, 0) <> 0
               Begin
                  Select @PnEstatus = @w_error,
                         @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                  Insert Into dbo.Bitacora_CargosAbonos
                  (mensaje, idError, mensajeError, ultactual )
                  Values ('ERROR 18 ', @w_error, @w_desc_error, @w_fechaCaptura);

                  Set Xact_Abort Off
                  Return
               End

--         Actualiza los saldos de la cta, sucursal y region correspondiente, en el catalogo auxiliar del mes en curso.'

            Set @w_sql = 'Update  dbo.' + @w_catalagoAux + ' '                                          +
                         'Set ' + Case When @w_clave = 'C'
                                       Then 'CarExt     = CarExt     + ' + Convert(Varchar, @w_importe) + ', ' +
                                            'CarProceso = CarProceso + ' + Convert(Varchar, @w_importe)
                                       Else 'AboExt     = AboExt     + ' + Convert(Varchar, @w_importe) + ', ' +
                                            'AboProceso = AboProceso + ' + Convert(Varchar, @w_importe)
                                  End + ' '

            Set @w_sql = @w_sql + 'Where ejercicio   = ' + Cast(@PnAnio  As VarChar)              + ' ' +
                                  'And   mes         = ' + Cast(@PnIdMes As Varchar)              + ' ' +
                                  'And   Llave       = ' + @w_comilla + @w_llave + @w_comilla     + ' ' +
                                  'And   Moneda      = ' + Cast(@w_moneda_id As Varchar)          + ' ' +
                                  'And   Sector_id   = ' + @w_comilla + '00' + @w_comilla         + ' '  +
                                  'And   Sucursal_id =  0 '                                       +
                                  'And   Region_id   =  0 '

            Begin try
               Execute (@w_sql)
            End Try

            Begin Catch
               Select @w_error      = Error_Number(),
                      @w_linea      = Error_line(),
                      @w_desc_error = Error_Message()

            End Catch

            If IsNull(@w_error, 0) <> 0
               Begin
                  Select @PnEstatus = @w_error,
                         @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                  Insert Into dbo.Bitacora_CargosAbonos
                  (mensaje, idError, mensajeError, ultactual )
                  Values ('ERROR 19 ', @w_error, @w_desc_error, @w_fechaCaptura);

                  Set Xact_Abort Off
                  Return
               End

-- catalogoReporte

--
-- cuenta contable. Nivel 1.
--

            Set @w_sql = 'If Not Exists ( Select Top 1 1 '  +
                                         'From   dbo.' + @w_catReporte + ' With (Nolock) '             +
                                         'Where  ejercicio = '    + Cast(@PnAnio      As Varchar) + ' ' +
                                         'And    mes       = '    + Cast(@PnIdMes     As Varchar) + ' ' +
                                         'And    Llave     = '    + @w_comilla + @w_llave + @w_comilla  + ' ' +
                                         'And    moneda_id = '    + Cast(@w_moneda_id As Varchar)       + ' ' +
                                         'And    nivel     = 1) ' +
                            'Begin ' +
                               'Insert Into dbo.' + @w_catReporte                 +
                               '(Ejercicio, Mes, Llave, moneda_id, nivel, SAct) ' +
                               'Select ' + Cast(@PnAnio      As Varchar) + ', '   +
                                           Cast(@PnIdMes     As Varchar) + ', '   +
                                           @w_comilla + @w_llave + @w_comilla     + ', ' +
                                           Cast(@w_moneda_id As Varchar) + ', 1, ' +
                                           Cast(@w_importe As Varchar)            + ' ' +
                            'End '                                                                                              +
                         'Else '                                                                                                +
                            'Begin ' +
                               'Update dbo.' + @w_catReporte   + ' ' +
                               'Set   SAct   = SAct  + ' +
                                                          Case When @w_clave = 'C'
                                                            Then Cast(@w_importe  As Varchar)
                                                            Else Cast(-@w_importe As Varchar)
                                                          End + ' ' +
                               'Where  ejercicio = '   + Cast(@PnAnio      As Varchar) + ' ' +
                               'And    mes       = '   + Cast(@PnIdMes     As Varchar) + ' ' +
                               'And    Llave     = '   + @w_comilla + @w_llave + @w_comilla  + ' ' +
                               'And    moneda_id = '   + Cast(@w_moneda_id As Varchar)       + ' ' +
                           'End'

            Begin try
               Execute (@w_sql)
            End Try

            Begin Catch
               Select @w_error      = Error_Number(),
                      @w_linea      = Error_line(),
                      @w_desc_error = Error_Message()

            End Catch

            If IsNull(@w_error, 0) <> 0
               Begin
                  Select @PnEstatus = @w_error,
                         @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

                  Insert Into dbo.Bitacora_CargosAbonos
                  (mensaje, idError, mensajeError, ultactual )
                  Values ('ERROR 20', @w_error, @w_desc_error, @w_fechaCaptura);

                  Set Xact_Abort Off
                  Return
               End

         End -- Fin del else


   End -- fin del while


-- ConsolidaciÃ³n del Catalogo Reportes

--
-- Se consulta si hay movimientos en catReportes a fin de consolidar el arbol.
--

   Select @w_consulta = Concat('Select @o_existe = Count(1) ',
                               'From   dbo.', @w_catReporte, ' With (Nolock) ',
                               'Where  ejercicio = ', @PnAnio,  ' ',
                               'And    mes       = ', @PnIdMes),
          @w_param    = '@o_existe   Integer Output';

   Begin Try
      Execute Sp_ExecuteSQL @w_consulta, @w_param, @o_existe = @w_existe Output
   End   Try

         Begin Catch
            Select @w_error      = Error_Number(),
                   @w_linea      = Error_line(),
                   @w_desc_error = Error_Message()

         End Catch

         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

               Insert Into dbo.Bitacora_CargosAbonos
               (mensaje, idError, mensajeError, ultactual )
               Values ('ERROR 21', @w_error, @w_desc_error, @w_fechaCaptura);

               Set Xact_Abort Off
               Return
            End

   If @w_existe != 0
      Begin
         Set @w_sql = Concat('Delete dbo.', @w_catReporte,    ' ',
                             'Where  ejercicio = ', @PnAnio,  ' ',
                             'And    mes       = ', @PnIdMes, ' ' +
                             'And    nivel    != 1 ')

         Begin try
            Execute (@w_sql)
         End Try

         Begin Catch
            Select @w_error      = Error_Number(),
                   @w_linea      = Error_line(),
                   @w_desc_error = Error_Message()

         End Catch

         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

               Insert Into dbo.Bitacora_CargosAbonos
               (mensaje, idError, mensajeError, ultactual )
               Values ('ERROR 21', @w_error, @w_desc_error, @w_fechaCaptura);

               Set Xact_Abort Off
               Return
            End

--
-- Actualizando Cuenta Mayor
--

         Set @w_sql = Concat('Insert Into  dbo.', @w_catReporte, '  ',
                            '(Ejercicio, Mes, Llave, moneda_id,  ', ' ',
                             'nivel,     SAct, FecCap)  ',         ' ',
                             'Select Ejercicio, Mes,      Concat(Substring(llave, 1, 4), Replicate(0, 12)), moneda_id, ',
                                    '0,         Sum(SAct), Max(FecCap) ',
                             'From   dbo.', @w_catReporte, ' With (NoLock) ',
                             'Where  ejercicio = ', @PnAnio,  ' ',
                             'And    mes       = ', @PnIdMes, ' ',
                             'And    nivel     = 1 ',
                             'Group  BY Ejercicio, Mes, Concat(Substring(llave, 1, 4), Replicate(0, 12)), moneda_id ')

         Begin try
            Execute (@w_sql)
         End Try

         Begin Catch
            Select @w_error      = Error_Number(),
                   @w_linea      = Error_line(),
                   @w_desc_error = Error_Message()

         End Catch

         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

               Insert Into dbo.Bitacora_CargosAbonos
               (mensaje, idError, mensajeError, ultactual )
               Values ('ERROR 22', @w_error, @w_desc_error, @w_fechaCaptura);

               Set Xact_Abort Off
               Return
            End

--
-- Actualizando SubCta
--

         Set @w_sql = Concat('Insert Into  dbo.', @w_catReporte, '  ',
                            '(Ejercicio, Mes, Llave, moneda_id,  ', ' ',
                             'nivel,     SAct, FecCap)  ',         ' ',
                             'Select Ejercicio, Mes,      Concat(Substring(llave, 1, 6), Replicate(0, 10)), moneda_id, ',
                                    '0,         Sum(SAct), Max(FecCap) ',
                             'From   dbo.', @w_catReporte, ' a ',
                             'Where  ejercicio = ', @PnAnio,  ' ',
                             'And    mes       = ', @PnIdMes, ' ',
                             'And    nivel     = 1 ',
                             'And    Substring(Llave, 5, 2) != ', @w_comilla , '00', @w_comilla, ' ' ,
                             'Group  BY Ejercicio, Mes, Concat(Substring(llave, 1, 6), Replicate(0, 10)), moneda_id ')

         Begin try
            Execute (@w_sql)
         End Try

         Begin Catch
            Select @w_error      = Error_Number(),
                   @w_linea      = Error_line(),
                   @w_desc_error = Error_Message()

         End Catch

         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

               Insert Into dbo.Bitacora_CargosAbonos
               (mensaje, idError, mensajeError, ultactual )
               Values ('ERROR 23', @w_error, @w_desc_error, @w_fechaCaptura);

               Set Xact_Abort Off
               Return
            End

--
-- Actualizando SSubCta
--

         Set @w_sql = Concat('Insert Into  dbo.', @w_catReporte, '  ',
                            '(Ejercicio, Mes, Llave, moneda_id,  ', ' ',
                             'nivel,     SAct, FecCap)  ',         ' ',
                             'Select Ejercicio, Mes,       Concat(Substring(llave, 1, 8), Replicate(0, 8)), moneda_id, ',
                                    '0,         Sum(SAct), Max(FecCap) ',
                             'From   dbo.catalogoReporteTbl ',
                             'Where  ejercicio = ', @PnAnio,  ' ',
                             'And    mes       = ', @PnIdMes, ' ',
                             'And    nivel     = 1 ',
                             'And    Substring(Llave, 7, 2) != ', @w_comilla , '00', @w_comilla, ' ' ,
                             'Group  BY Ejercicio, Mes, Concat(Substring(llave, 1, 8), Replicate(0, 8)), moneda_id ')

         Begin try
            Execute (@w_sql)
         End Try

         Begin Catch
            Select @w_error      = Error_Number(),
                   @w_linea      = Error_line(),
                   @w_desc_error = Error_Message()

         End Catch

         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

               Insert Into dbo.Bitacora_CargosAbonos
               (mensaje, idError, mensajeError, ultactual )
               Values ('ERROR 24', @w_error, @w_desc_error, @w_fechaCaptura);

               Set Xact_Abort Off
               Return
            End


--
-- Actualizando SSSubCta
--

         Set @w_sql = Concat('Insert Into  dbo.', @w_catReporte, '  ',
                            '(Ejercicio, Mes, Llave, moneda_id,  ', ' ',
                             'nivel,     SAct, FecCap)  ',         ' ',
                             'Select Ejercicio, Mes,       Concat(Substring(llave, 1, 10), Replicate(0, 6)), moneda_id, ',
                                    '0,         Sum(SAct), Max(FecCap) ',
                             'From   dbo.catalogoReporteTbl ',
                             'Where  ejercicio = ', @PnAnio,  ' ',
                             'And    mes       = ', @PnIdMes, ' ',
                             'And    nivel     = 1 ',
                             'And    Substring(Llave, 9, 2) != ', @w_comilla , '00', @w_comilla, ' ' ,
                             'Group  BY Ejercicio, Mes, Concat(Substring(llave, 1, 10), Replicate(0, 6)), moneda_id ')

         Begin try
            Execute (@w_sql)
         End Try

         Begin Catch
            Select @w_error      = Error_Number(),
                   @w_linea      = Error_line(),
                   @w_desc_error = Error_Message()

         End Catch

         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

               Insert Into dbo.Bitacora_CargosAbonos
               (mensaje, idError, mensajeError, ultactual )
               Values ('ERROR 25', @w_error, @w_desc_error, @w_fechaCaptura);

               Set Xact_Abort Off
               Return
            End

      End
-- Actualiza los saldos de la subcta correspondiente, en el catalogo del mes en curso.

   Set @w_sql = 'Update ' + @w_catalogo                                                         + '  ' +
                'Set ' + Case When @w_clave = 'C'
                              Then 'CarExt     = CarExt + '     + Convert(Varchar, @w_importe)  + ', '  +
                                   'CarProceso = CarProceso + ' + Convert(Varchar, @w_importe)  + '  '  +
                                   'Where Ejercicio = ' + Cast(@PnAnio  As Varchar)             + '  '  +
                                   'And   mes       = ' + Cast(@PnIdMes As Varchar)             + '  '  +
                                   'And   Moneda    = ' + Cast(@w_moneda_id As Varchar)         + '  '  +
                                   'And   Niv       = 0 '                                               +
                                   'And   Llave    ' +  Case When @w_NCta = '00'
                                                             Then ' In ( '+ @w_comilla + @w_SubCta   + @w_comilla + ', ' + @w_comilla + @w_ctaMayor + @w_comilla + ') '
                                                             Else ' In ( '+ @w_comilla + @w_SSSubCta + @w_comilla + ', ' + @w_comilla + @w_SSubCta  + @w_comilla + ', ' +
                                                                  '      '+ @w_comilla + @w_SubCta   + @w_comilla + ', ' + @w_comilla + @w_ctaMayor + @w_comilla + ') '
                                                        End
                              Else 'AboExt          = AboExt     + ' + Convert(Varchar, @w_importe) + ', '              +
                                   'AboProceso      = AboProceso + ' + Convert(Varchar, @w_importe) + ' '           +
                                   'Where Ejercicio = ' + Cast(@PnAnio  As Varchar)             + '  '  +
                                   'And   mes       = ' + Cast(@PnIdMes As Varchar)             +  ' '  +
                                   'And   Moneda    =  ' + Cast(@w_moneda_id As Varchar)           + '  '                   +
                                   'And   Niv       =  0  '                                                             +
                                   'And   Llave    ' + Case When @w_NCta = '00'
                                                            Then ' In( ' + @w_comilla + @w_SubCta   + @w_comilla + ', '   +
                                                                         + @w_comilla + @w_ctaMayor + @w_comilla + ') '
                                                            Else ' In( ' + @w_comilla + @w_SSSubCta + @w_comilla + ', '  +
                                                                      + @w_comilla + @w_SSubCta  + @w_comilla + ', '  +
                                                                      + @w_comilla + @w_SubCta   + @w_comilla + ', '  +
                                                                      + @w_comilla + @w_ctaMayor + @w_comilla + ')'
                                                       End
                         End

   Begin try
       Execute (@w_sql)
   End Try

   Begin Catch
      Select @w_error      = Error_Number(),
             @w_linea      = Error_line(),
             @w_desc_error = Error_Message()

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en LÃ­nea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
         (mensaje, idError, mensajeError, ultactual )
         Values ('ERROR 26', @w_error, @w_desc_error, @w_fechaCaptura);

         Set Xact_Abort Off
         Return
      End


   Set Xact_Abort Off
   Return
End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 
--
-- Comentarios.
--

Declare
   @w_valor          Varchar(1500) = 'Aplica las pÃ³lizas a fin de actualizar cargos y abonos.',
   @w_procedimiento  Varchar( 100) = 'Spp_AplicaPolizas'


If Not Exists (Select Top 1 1
               From   sys.extended_properties a
               Join   sysobjects  b
               On     b.xtype   = 'P'
               And    b.name    = @w_procedimiento
               And    b.id      = a.major_id)

   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'Dbo',
                                      @level1type = 'Procedure',
                                      @level1name = @w_procedimiento;

   End
Else
   Begin
      Execute sp_updateextendedproperty @name       = 'MS_Description',
                                        @value      = @w_valor,
                                        @level0type = 'Schema',
                                        @level0name = N'Dbo',
                                        @level1type = 'Procedure',
                                        @level1name = @w_procedimiento
   End

-- Declare
   -- @PnEjercicio      Integer        = 2024,
   -- @PnMes            Integer        = 7,
   -- @PsCondicion      Varchar(500)   = ' And Cast(P.Fecha_Mov As Date) Between ' + Char(39) + '2024-07-01' + Char(39) + ' And ' + Char(39) + '2024-07-31' + Char(39),
   -- @PnEstatus        Integer        = 0,
   -- @PsMensaje        Varchar(250)   = ' ';
-- Begin
   -- Execute dbo.spp_ActualizaCarAbo @PnEjercicio = @PnEjercicio,
                                   -- @PnMes       = @PnMes,
                                   -- @PsCondicion = @PsCondicion,
                                   -- @PnEstatus   = @PnEstatus  Output,
                                   -- @PsMensaje   = @PsMensaje  Output;

   -- Select @PnEstatus, @PsMensaje
   -- Return
-- End
-- Go

-- Fecha: 28/Noviembre/2022
-- Autor: Desconocido
-- Task: N/A
-- Observaciones: Proceso que realiza actualizacion de cargos y abonos por proceso de acuerdo a condiciones.

-- MODIFICACIONES:
-- V1.0. [Zayra Mtz. Candia].[28Nov2022]. Se agregar correcciones y validacioes a las polizas, principalmente en sucursal, region, sector e importes 0.
            -- Ademas la actualizacion a los auxiliares corporativo, en el centro de costos 5555.
*/


Create Or Alter Procedure dbo.spp_ActualizaCarAbo
  (@PnEjercicio      Integer,
   @PnMes            Integer,
   @PsCondicion      Varchar(500),
   @PnEstatus        Integer      = 0   Output,
   @PsMensaje        Varchar(250) = ' ' Output)
As

-- Declaración de Variables --

Declare
   @intMes                   Integer,
   @mesCer                   Integer,
   @w_linea                  Integer,
   @mes                      Varchar(3)    ,
   @w_sql                    NVarchar(1500),
   @w_param                  Nvarchar( 750),
   @w_comilla                Char(1),
   @w_fechaProceso           Datetime,
--
   @w_Poliza                 Sysname,
   @w_ControlCarAbo          Sysname,
   @w_Control                Sysname,
   @w_movimientos            Sysname,
   @w_Cat                    Sysname,
   @w_CatAux                 Sysname,
   @w_CatRep                 Sysname,
   @w_CatAuxRep              Sysname,


-- INICIALIZAN VARIABLES PARA WHILE --

   @w_Error                  Integer,
   @w_mesCer                 Integer,
   @w_desc_error             Varchar(250)  ,
   @w_minId                  Integer,
   @w_maxId                  Integer,
   @w_CountSucRegError       Integer,
   @w_idEstatus              Integer,
   @w_operacion              Integer,
   @w_CountSucRegErrorOUT    Integer;

Begin
   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    On
   Set Ansi_Warnings On
   Set Ansi_Padding  On

    --Definir las variables con el nombre de la tabla y año--

   Select  @w_ControlCarAbo = 'ControlCargoAbonoTbl',
           @w_Control       = 'Control',
           @w_movimientos   = 'movimientosAnio',
           @w_Poliza        = 'polizaAnio',
           @w_catRep        = 'catalogoReporteTbl',
           @w_catAuxRep     = 'catalogoAuxReporteTbl',
           @w_operacion     = 9999,
		   @w_comilla       = Char(39),
           @w_fechaProceso  = Getdate(),
           @PnEstatus       = 0,
           @PsMensaje       = Null;
--
-- Validaciones
--

   Select  Top 1 @w_idEstatus = idEstatus
   From    dbo.ejercicios With (Nolock)
   Where   ejercicio = @PnEjercicio;
   If @@Rowcount = 0
      Begin
         Select @PnEstatus  = 8021,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

   If @w_idEstatus != 1
      Begin
         Select @PnEstatus  = 8022,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

   If Not Exists ( Select Top 1 1
                   From   dbo.catCriteriosTbl Whith (Nolock)
                   Where  criterio = 'mes'
                   And    valor    = @PnMes)
      Begin
         Select @PnEstatus  = 8023,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

---=================================================================================
-- ZCMC/CHUR 28/Nov/2022. Inicia Modificación.
-- 1. Elimina registros que cargan y abonan cantidades en 0.00
---=================================================================================

   Set @w_sql = Concat('Delete dbo.', @w_movimientos,       ' ',
                       'Where  Ejercicio = ', @PnEjercicio, ' ',
                       'And    mes       = ', @PnMes,       ' ',
                       'And    importe   = 0.00');


   Begin Try
      Execute(@w_sql)
   End Try

  Begin Catch
     Select  @w_Error      = @@Error,
             @w_linea      = Error_line(),
             @w_desc_error = Substring (Error_Message(), 1, 200)

  End Catch

  If IsNull(@w_error, 0) <> 0
     Begin
        Select @PnEstatus = @w_Error,
               @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);

        Insert Into dbo.Bitacora_CargosAbonos
       (mensaje, idError, mensajeError, ultactual )
        Select 'ERROR Delete Importes 0.00', @w_error, @PsMensaje, @w_fechaProceso;


        Set Xact_Abort Off
        Return
     End

--
-- 2. Se corrigen el sector_id, en caso de venir con un solo 0.
--

   Set @w_sql = Concat('Update dbo.', @w_movimientos,       '  ',
                       'Set    sector_id = ', @w_comilla,  '00', @w_comilla, ' ',
                       'Where  Ejercicio = ', @PnEjercicio, ' ',
                       'And    mes       = ', @PnMes,       ' ',
                       'And    sector_id = ', @w_comilla ,  '0',  @w_comilla);

   Begin Try
      Execute(@w_sql)
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual )
         Select 'ERROR Update Movdia Sector', @w_error, @PsMensaje, @w_fechaProceso;

         Set Xact_Abort Off
         Return
      End

--
-- 3. Cambiar auxiliares corporativos a centro de costos 5555000, 5555,
--    en corformidad con la tabla de auxiliaresCorporativos
--

   Set @w_sql = Concat('Update dbo.', @w_movimientos,       '  ',
                       'Set    Sucursal_id = 5555000, ',
                               'Region_id  = 5555 ',
                       'From   dbo.', @w_movimientos,       ' a With (Nolock) ',
                       'Where  Ejercicio = ', @PnEjercicio, ' ',
                       'And    mes       = ', @PnMes,       ' ',
                       'And    Exists    ( Select Top 1 1 ',
                                          'From   dbo.AuxiliaresCorporativos With (Nolock) ',
                                          'Where  llave = a.llave )');

   Begin Try
      Execute(@w_sql)
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual )
         Select 'ERROR Update Sucursal y Region de AuxiliaresCorporativos', @w_error, @PsMensaje, @w_fechaProceso;


         Set Xact_Abort Off
         Return
      End

--
-- 4. Valida centro de costo para todas las polizas,
--

   Select @w_sql   = Concat('Select @o_cantidad = count (1) ',
                            'From   dbo.' + @w_movimientos + ' a With (Nolock) ' +
                            'Where  Ejercicio  = ', @PnEjercicio, ' ',
                            'And    mes        = ', @PnMes,       ' ',
                            'And    Not Exists ( Select Top 1 1 ',
                                                 'From   dbo.Area_o_Region With(Nolock) ',
                                                 'Where  Region_id   = a.region_id ',
                                                 'And    Sucursal_id = a.Sucursal_id) '),
          @w_param = '@o_cantidad Integer Output';

    Begin Try
       Execute Sp_executesql @w_sql, @w_param, @o_cantidad = @w_CountSucRegError Output;
    End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual )
         Select 'ERROR al contar registros con Sucursal o region inexistente', @w_error, @PsMensaje, @w_fechaProceso;


         Set Xact_Abort Off
         Return
      End

   If @w_CountSucRegError > 0
      Begin
         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultActual )
         Select Concat ('ERROR ', @w_CountSucRegError, ' Registros con Sucursal o region inexistente'),
                  9999, Char(32),  @w_fechaProceso;

         Set Xact_Abort Off
         Return

      End

--
--- ZCMC/CHUR 28/Nov/2022. Termina Modificación.
--

--
-- Inicio de Proceso.
--

-- Extrae el Período en proceso

   Select @w_mesCer   = Max(mes)
   From   dbo.control With (Nolock)
   Where  ejercicio = @PnEjercicio
   And    idEstatus = 1;
   
-- Limpiar Cargos y Abonos del Catalogo para el ejercicio y mes.


   If @Pnmes = @w_mesCer
      Begin
         Set @w_sql = Concat('Update dbo.Catalogo ',
                             'Set    CarExt        = 0, ',
                             '       AboExt        = 0, ',
                             '       CarProceso    = 0, ',
                             '       AboProceso    = 0  ',
                             'Where  ejercicio   = ', @PnEjercicio, ' ',
                             'And    mes         = ', @PnMes)
      
         Begin Try
           Execute(@w_sql)
         End Try
      
         Begin Catch
            Select  @w_Error      = @@Error,
                    @w_linea      = Error_line(),
                    @w_desc_error = Substring (Error_Message(), 1, 200)
      
         End Catch
      
         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_Error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);
      
               Insert Into dbo.Bitacora_CargosAbonos
              (mensaje, idError, mensajeError, ultactual )
               Select 'ERROR', @w_error, @PsMensaje, @w_fechaProceso;
      
      
               Set Xact_Abort Off
               Return
            End
      
      -- Limpiar Cargos y Abonos del para el ejercicio y mes.
      
         Set @w_sql = Concat('Update dbo.CatalogoAuxiliar ',
                             'Set    CarExt        = 0, ',
                             '       AboExt        = 0, ',
                             '       CarProceso    = 0, ',
                             '       AboProceso    = 0  ',
                             'Where  ejercicio   = ', @PnEjercicio, ' ',
                             'And    mes         = ', @PnMes)
      
         Begin Try
           Execute(@w_sql)
         End Try
         
         Begin Catch
            Select  @w_Error      = @@Error,
                    @w_linea      = Error_line(),
                    @w_desc_error = Substring (Error_Message(), 1, 200)
      
         End Catch
      
         If IsNull(@w_error, 0) <> 0
            Begin
               Select @PnEstatus = @w_Error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);
      
               Insert Into dbo.Bitacora_CargosAbonos
              (mensaje, idError, mensajeError, ultactual )
               Select 'ERROR', @w_error, @PsMensaje, @w_fechaProceso;
      
      
               Set Xact_Abort Off
               Return
            End
      End
      
   Execute dbo.Spp_AplicaPolizas @PnAnio      = @PnEjercicio,
                                 @PnIdMes     = @PnMes,
                                 @PnmesCer    = @w_mesCer,
                                 @PsCondicion = @PsCondicion,
                                 @PnEstatus   = @PnEstatus Output,
                                 @PsMensaje   = @PsMensaje Output;


   If IsNull(@PnEstatus, 0) <> 0
      Begin
         Set Xact_Abort Off
         Return
      End

-- Modifica el PnEstatus de VIGENTE a PROCESADA en el proceso de cargos y abonos
-- PnEstatus VIGENTE ES CON VALOR 0
-- PnEstatus PROCESADA ES CON VALOR 2

   Set @w_sql = Concat('Update m  ', 
                       'Set    m.status = 2 ',
                       'From   dbo.' + @w_Poliza + '      m With (Nolock) ',
                       'Join   dbo.' + @w_movimientos + ' p With (Nolock) ',
                       'On     p.Fecha_Mov  = p.Fecha_Mov  ',
                       'And    p.Referencia = p.Referencia ',
                       'And    p.ejercicio  = m.ejercicio ',
                       'And    p.mes        = m.mes ',
                       'Where  1  = 1 ', @PsCondicion)
 
   Begin Try
     Execute(@w_sql)
   End Try
   
   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End Catch

   If IsNull(@w_error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);

         Insert Into dbo.Bitacora_CargosAbonos
        (mensaje, idError, mensajeError, ultactual)
         Select 'ERROR 5', @w_error, @PsMensaje, @w_fechaProceso;


         Set Xact_Abort Off
         Return
      End  
  
   Set   @PsMensaje = 'PROCESO DE CARGOS Y ABONOS REALIZADO CON ÉXITO'

   Insert Into Bitacora_CargosAbonos
  (mensaje, idError, mensajeError, ultactual)
   Select @PsMensaje, @PnEstatus, Char(32), @w_fechaProceso;
--

   Set Xact_Abort Off
   Return

End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 
--
-- Comentarios.
--

Declare
   @w_valor          Varchar(1500) = 'Proceso que realiza actualizacion de cargos y abonos por proceso de acuerdo a condiciones..',
   @w_procedimiento  Varchar( 100) = 'spp_ActualizaCarAbo'


If Not Exists (Select Top 1 1
               From   sys.extended_properties a
               Join   sysobjects  b
               On     b.xtype   = 'P'
               And    b.name    = @w_procedimiento
               And    b.id      = a.major_id)

   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'Dbo',
                                      @level1type = 'Procedure',
                                      @level1name = @w_procedimiento;

   End
Else
   Begin
      Execute sp_updateextendedproperty @name       = 'MS_Description',
                                        @value      = @w_valor,
                                        @level0type = 'Schema',
                                        @level0name = N'Dbo',
                                        @level1type = 'Procedure',
                                        @level1name = @w_procedimiento
   End
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 269> 270> 271> 272> 273> 274> 275> 276> 277> 278> 279> 280> 281> 282> 283> 284> 285> 286> 287> 288> 289> 290> 291> 292> 293> 294> 295> 296> 297> 298> 299> 300> 301> 302> 303> 304> 305> 306> 307> 308> 309> 310> 311> 312> 313> 314> 315> 316> 317> 318> 319> 320> 321> 322> 323> 324> 325> 326> 327> 328> 329> 330> 331> 332> 333> 334> 335> 336> 337> 338> 339> 340> 341> 342> 343> 344> 345> 346> 347> 348> 349> 350> 351> 352> 353> 354> 355> 356> 357> 358> 359> 360> 361> 362> 363> 364> 365> 366> 367> 368> 369> 370> 371> 372> 373> 374> 375> 376> 377> 378> 379> 380> 381> 382> 383> 384> 385> 386> 387> 388> 389> 390> 391> 392> 393> 394> 395> 396> 397> 398> 399> 400> 401> 402> 403> 404> 405> 406> 407> 408> 409> 410> 411> 412> 413> 414> 415> 416> 417> 418> 419> 420> 421> 422> 423> 424> 425> 426> 427> 428> 429> 430> 431> 432> 433> 434> 435> 436> 437> 438> 439> 440> 441> 442> 443> 444> 445> 446> 447> 448> 449> 450> 451> 452> 453> 454> 455> 456> 457> 458> 459> 460> 461> 462> 463> 464> 465> 466> 467> 468> 469> 470> 471> 472> 473> 474> 475> 476> 477> 478> 479> 480> 481> 482> 483> 484> 485> 486> 487> 488> 489> 490> 491> 492> 493> 494> 495> 496> 497> 498> 499> 500> 501> 502> 503> 504> 505> 506> 507> 508> 509> 510> 511> 512> 513> 514> 515> 516> 517> 518> 519> 520> 521> 522> 523> 524> 525> 526> 527> 528> 529> 530> 531> 532> 533> 534> 535> 536> 537> 538> 539> 540> 541> 542> 543> 544> 545> 546> 547> 548> 549> 550> 551> 552> 553> 554> 555> 556> 557> 558> 559> 560> 561> 562> 563> 564> 565> 566> 567> 568> 569> 570> 571> 572> 573> 574> 575> 576> 577> 578> 579> 580> 581> 582> 583> 584> 585> 586> 587> 588> 589> 590> 591> 592> 593> 594> 595> 596> 597> 598> 599> 600> 601> 602> 603> 604> 605> 606> 607> 608> 609> 610> 611> 612> 613> 614> 615> 616> 617> 618> 619> 620> 621> 622> 623> 624> 625> 626> 627> 628> 629> 630> 631> 632> 633> 634> 635> 636> 637> 638> 639> 640> 641> 642> 643> 644> 645> 646> 647> 648> 649> 650> 651> 652> 653> 654> 655> 656> 657> 658> 659> 660> 661> 662> 663> 664> 665> 666> 667> 668> 669> 670> 671> 672> 673> 674> 675> 676> 677> 678> 679> 680> 681> 682> 683> 684> 685> 686> 687> 688> 689> 690> 691> 692> 693> 694> 695> 696> 697> 698> 699> 700> 701> 702> 703> 704> 705> 706> 707> 708> 709> 710> 711> 712> 713> 714> 715> 716> 717> 718> 719> 720> 721> 722> 723> 724> 725> 726> 727> 728> 729> 730> 731> 732> 733> 734> 735> 736> 737> 738> 739> 740> 741> 742> 743> 744> 745> 746> 747> 748> 749> 750> 751> 752> 753> 754> 755> 756> 757> 758> 759> 760> 761> 762> 763> 764> 765> 766> 767> 768> 769> 770> 771> 772> 773> 774> 775> 776> 777> 778> 779> 780> 781> 782> 783> 784> /*
-- Declare
   -- @PdFechaInicial       Date         = '2024-12-01',
   -- @PdFechaFinal         Date         = '2024-12-31',
   -- @PnEjercicio          Smallint     = 2024,
   -- @PnMes                Tinyint      = 13,
   -- @PsReferencia         Varchar( 20) = 'PDI00001',
   -- @PdFechaMov           Date         = '2024-12-31',
   -- @PnConsulta           Tinyint      = 3,
   -- @PnSalida             Tinyint      = 1,
   -- @PnEstatus            Integer      = 0,
   -- @PsMensaje            Varchar(250) = Null

-- Begin
   -- Execute dbo.Spc_cifrasCargosAbonos @PdFechaInicial = @PdFechaInicial,
                                      -- @PdFechaFinal   = @PdFechaFinal,
                                      -- @PnEjercicio    = @Pnejercicio,
                                      -- @PnMes          = @PnMes,
                                      -- @PsReferencia   = @PsReferencia,
                                      -- @PdFechaMov     = @PdFechaMov,
                                      -- @PnConsulta     = @PnConsulta,
                                      -- @PnSalida       = @PnSalida,
                                      -- @PnEstatus      = @PnEstatus    Output,
                                      -- @PsMensaje      = @PsMensaje    Output;
   -- If @PnEstatus != 0
      -- Begin
         -- Select @PnEstatus, @PsMensaje
      -- End

   -- Return;

-- End
-- Go


-- Version:     V1
-- Fecha:       09-Agosto-2024
-- Programador: Pedro Zambrano.
-- Objetivo:    Realizar consultas para la pantalla de cargos y abonos.
--

*/


Create Or Alter Procedure dbo.Spc_cifrasCargosAbonos
  (@PdFechaInicial       Date,
   @PdFechaFinal         Date,
   @PnEjercicio          Smallint     = Null,
   @PnMes                Tinyint      = Null,
   @PsReferencia         Varchar( 20) = Null,
   @PdFechaMov           Date         = Null,
   @PnConsulta           Tinyint      = 1,          -- 1 = Totales. 2 = Polizas Descuadradas, 3 = detalle de póliza,  4 = Emisión de Reporte de errores, 5 = Actualización.
   @PnSalida             Tinyint      = 1,          -- 1 = Tipo Tabla. 2 = Json
   @PnEstatus            Integer      = 0    Output,
   @PsMensaje            Varchar(250) = Null Output)
As

Declare
   @w_desc_error                         Varchar ( 250),
   @w_Error                              Integer,
   @w_linea                              Integer,
   @w_valodaCC                           Tinyint,
   @w_sql                                Nvarchar(1500),
   @w_param                              NVarchar( 750),
   @w_comilla                            Char(1),
   @w_guion                              Char(1),
   @w_usuario                            Varchar (  10),
   @w_anio                               Smallint,
   @w_length                             Smallint,
   @w_mes                                Tinyint,
   @w_operacion                          Integer,
   @w_idUsuarioAct                       Integer,
   @w_registros                          Integer,
   @w_mesAnioInicio                      Integer,
   @w_mesAnioFin                         Integer,
   @w_TotCar                             Decimal (18, 2),
   @w_TotAbo                             Decimal (18, 2),
   @w_diferencia                         Decimal (18, 2),
   @w_lang                               Varchar( 20),
   @w_mesProc                            Varchar(  3),
   @w_mensaje                            Varchar(750),
   @w_condicion                          Varchar(500),
   @w_insertErrores                      Varchar(Max),
   @w_tablaErrores                       Sysname;

Begin
   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    Off

--
-- Inicialización de Variables.
--

   Select @PnEstatus             = 0,
          @PsMensaje             = Null,
          @w_operacion           = 9999,
          @w_registros           = 0,
          @w_comilla             = Char(39),
          @w_guion               = Char(45),
          @w_lang                = @@language,
          @w_mes                 = Isnull(@PnMes,       DatePart(mm, @PdFechaInicial)),
          @w_anio                = Isnull(@PnEjercicio, DatePart(yy, @PdFechaInicial)),
          @w_mesAnioInicio       = Cast(Format(@PdFechaInicial, 'yyyyMM') As Integer),
          @w_mesAnioFin          = Cast(Format(@PdFechaFinal,   'yyyyMM') As Integer),
          @w_valodaCC            = dbo.Fn_BuscaResultadosParametros(209, 'Valor'),
          @w_length              = dbo.Fn_BuscaResultadosParametros(351, 'Valor'),
          @w_mesProc             = dbo.Fn_BuscaMes(@w_mes),
          @w_tablaErrores        = 'MovimientosErrores',
          @w_insertErrores       = Concat('Insert into dbo.', @w_tablaErrores,
                                    ' (ejercicio,   mes,       Referencia, Fecha_mov,
                                       Concepto,    Moneda,    Llave,      Importe,
                                       Clave,       Cons,      Documento,  Sector_id,
                                       Sucursal_id, Region_id, FecCap,     Mens_Error,
                                       idError)'),
          @w_condicion           = ' And  Cast(p.Fecha_mov As Date) Between ' + @w_comilla + Cast(@PdFechaInicial As Varchar) + @w_comilla + ' ' +
                                                                      ' And ' + @w_comilla + Cast(@PdFechaFinal   As Varchar) + @w_comilla;


--
-- Validación del tipo de consulta.
--

   If Isnull(@PnConsulta, 0) Not Between 1 And 5
      Begin
         Select @PnEstatus = 8171,
                @PsMensaje =  'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort Off
         Return
      End

--
-- Validación de los Parámetros de Fecha.
--

   If @PdFechaInicial Is Null Or
      @PdFechaFinal   Is Null
      Begin
         Select @PnEstatus = 8160,
                @PsMensaje = 'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort    Off
         Return
      End

   If @PdFechaInicial > @PdFechaFinal
      Begin
         Select @PnEstatus = 8161,
                @PsMensaje = 'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort    Off
         Return
      End

   If @w_mesAnioInicio != @w_mesAnioFin
      Begin
         Select @PnEstatus = 8162,
                @PsMensaje = 'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort    Off
         Return
      End

--
-- Validación de los Parámetros de la Póliza.
--

   If @PnConsulta = 3
      Begin
         If @PsReferencia Is Null Or
            @PdFechaMov   Is Null
            Begin
               Select @PnEstatus = 8162,
                      @PsMensaje = 'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

               Set Xact_Abort    Off
               Return
            End
      End


--
-- Inicio de Proceso
--

--
-- Creación de tablas Temporales.
--

   Create Table #TotalPeriodo
   (secuencia    Integer         Not Null Identity (1, 1) Primary Key,
    totCar       Decimal (18, 2) Not Null Default 0.00,
    totAbo       Decimal (18, 2) Not Null Default 0.00,
    diferencia   Decimal (18, 2) Not Null Default 0.00)

   Create Table #tempCuentas
   (secuencia    Integer     Not Null Identity (1, 1) Primary Key,
    tipoCuenta   Char(1)     Not Null Default 'D',
    Llave        Varchar(20)     Null,
    Moneda       Varchar( 2)     Null,
    Sucursal_id  Integer         Null Default 0,
    Region_id    Integer         Null,
    Index tempCuentasIdx01 (tipoCuenta, Llave, Moneda, Sucursal_id, Region_id));

   Create Table #TempCuentasInexistentes
  (secuencia    Integer     Not Null Identity (1, 1) Primary Key,
   Llave        Varchar(20)     Null,
   Moneda       Varchar( 2)     Null,
   Sucursal_id  Integer         Null Default 0,
   Region_id    Integer         Null,
   Index tempCuentasIdx01 (Llave));

--
-- Búsqueda de Totales del Período por Aplicar.
--

   Insert Into #TotalPeriodo
  (totCar, TotAbo)
   Select Isnull(Sum(Case When m.Clave = 'C'
                     Then m.Importe
                     Else 0
                 End), 0),
          Isnull(Sum(Case When m.Clave = 'A'
                         Then m.Importe
                         Else 0
                     End), 0)
   From   dbo.movimientosAnio m With (Nolock)
   Join   dbo.PolizaAnio      p With (Nolock)
   On     p.referencia = m.referencia
   And    p.fecha_mov  = m.fecha_mov
   And    p.ejercicio  = m.ejercicio
   And    p.mes        = m.mes
   Where  Cast(p.fecha_mov As Date) Between @PdFechaInicial  And @PdFechaFinal
   And    p.ejercicio  = @w_anio
   And    p.mes        = @w_mes;
   Set @w_registros = @@Rowcount

   If  @w_registros = 0
      Begin
         Select @PnEstatus = 8172,
                @PsMensaje = 'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))

         Set Xact_Abort    Off
         Return
      End

   Update #TotalPeriodo
   Set    Diferencia = TotCar - TotAbo;

   Select @w_TotCar     = totCar,
          @w_TotAbo     = totAbo,
          @w_diferencia = diferencia
   From   #TotalPeriodo;

   Set @w_diferencia = Isnull(@w_TotCar, 0) - Isnull(@w_TotAbo, 0)

   If @PnConsulta = 1
      Begin
         Select Isnull(@w_TotCar, 0) Cargo, Isnull(@w_TotAbo, 0) Abono, @w_diferencia Diferencia;

         If @w_diferencia != 0
            Begin
               Select @PnEstatus = 8163,
                      @PsMensaje = 'Error.: ' + (dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus))
            End

         Set Xact_Abort    Off
         Return
      End


   If @PnConsulta = 2
      Begin
         If @w_diferencia = 0
            Begin
               Select @PnEstatus = 8166,
                      @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus);

               Set Xact_Abort    Off
               Return
            End

         Set @w_sql = 'Select p.referencia, p.fecha_mov, m.concepto, Sum(m.Importe_Cargo) Cargo,
                              Sum(m.Importe_Abono) Abono,
                              Sum(Abs(m.Importe_Cargo) - Abs(m.Importe_Abono)) Diferencia, p.usuario, p.fuenteDatos ' +
                      'From   dbo.movimientosAnio m With (Nolock) ' +
                      'Join   dbo.polizaAnio      p With (Nolock) ';

         Set @w_sql =  @w_sql + 'On     p.referencia = m.referencia
                                 And    p.fecha_mov  = m.fecha_mov
                                 And    p.ejercicio  = m.ejercicio
                                 And    p.mes        = m.mes
                                 Where  p.ejercicio  = ' + Cast(@w_anio As Varchar) + '
                                 And    p.mes        = ' + Cast(@w_mes  As Varchar) + @w_condicion + '
                                 Group  By p.referencia, p.fecha_mov, M.concepto, p.usuario, p.fuenteDatos
                                 Having Sum(Abs(importe_Cargo)) - Sum(Abs(Importe_Abono)) = 0.00
                                 Order by p.fuenteDatos, p.usuario, p.referencia, p.fecha_mov'

         If @PnSalida = 2
            Begin
               Set @w_sql =  @w_sql + ' For Json Path, root(' + @w_comilla + 'Reporte' + @w_comilla + ')'
            End

         Begin Try
            Execute (@w_sql);
         End   Try

         Begin Catch
            Select  @w_Error   = @@Error,
                    @w_linea   = Error_line(),
                    @w_mensaje = Substring (Error_Message(), 1, 200)

         End   Catch

         If Isnull(@w_Error, 0) <> 0
            Begin
               Select @PnEstatus = @w_Error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

               Set Xact_Abort Off
               Return
            End

         Select @PnEstatus = 8165,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus);


         Set Xact_Abort    Off
         Return

      End

   If @PnConsulta = 3
      Begin
         Set @w_sql = Concat('Select ', @w_comilla, 'movimientosAnio', @w_comilla, ' tablaPoliza, ',
                                     'b.tipoPoliza, b.Referencia polizaAnio, Cast(b.fecha_mov as Date) fecha_mov, ',
                                     'b.documento referencia, b.Concepto, a.Moneda, ',
                                     'Concat(Substring(a.llave, 1, 4), Char(45), ',
                                            'Substring(a.llave, 5, 2), Char(45), ',
                                            'Substring(a.llave, 7, 2), Char(45), ',
                                            'Substring(a.llave, 9, 2), ',
                                            'Substring(a.llave, 11,  6)) CuentaAuxiliar, ',
                                     'a.Importe_Cargo Cargo, a.Importe_Abono Abono, ',
                                     '(Select Sum(Isnull(Abs(Importe_Cargo), 0) - Isnull(Abs(Importe_Abono), 0)) ',
                                      'From   dbo.movimientosAnio With (nolock) ',
                                      'Where  Referencia  = a.Referencia ',
                                      'And    fecha_mov   = a.fecha_mov) diferenciaSaldo, ',
                                     'a.Documento, ',
                                     'a.ReferenciaFiscal, a.Fecha_Doc ',
                              'From  dbo.movimientosAnio  a With (Nolock) ',
                              'Join  dbo.polizaAnio       b With (Nolock) ',
                              'On    b.Referencia  = a.Referencia ',
                              'And   b.fecha_mov   = a.fecha_mov ',
                              'And   b.ejercicio   = a.ejercicio ',
                              'And   b.mes         = a.mes ',
                              'Where b.referencia = ', @w_comilla, @PsReferencia, @w_comilla, ' ',
                              'And   b.fecha_mov  = ', @w_comilla, @PdFechaMov,   @w_comilla, ' ');

         If @PnSalida = 2
            Begin
               Set @w_sql =  @w_sql + ' For Json Path, root(' + @w_comilla + 'Reporte' + @w_comilla + ')'
            End

         Begin Try
            Execute (@w_sql)
            Set @w_registros = @@Rowcount
         End   Try

         Begin Catch
            Select  @w_Error   = @@Error,
                    @w_linea   = Error_line(),
                    @w_mensaje = Substring (Error_Message(), 1, 200)

         End   Catch

         If Isnull(@w_Error, 0) <> 0
            Begin
               Select @PnEstatus = @w_Error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

               Set Xact_Abort Off
               Return
           End

         If  @w_registros = 0
             Begin
                Select @PnEstatus = 8170,
                       @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion,  @PnEstatus);

                Set Xact_Abort    Off
                Return
             End
         Set Xact_Abort Off
         Return

    End

--
-- Borrado de datos de la tabla de errores.
--

   Set @w_sql = Concat('Delete ', @w_tablaErrores, Char(32),
                       'From   ', @w_tablaErrores, ' p ',
                       'Where  1 = 1 ', @w_condicion);
   Begin Try
      Execute (@w_sql)
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
     End

--
-- Validaciones de la póliza, para emisión de reporte de pólizas con errores.
--

   Set @w_mensaje = 'Error en Longitud de la cuenta';

   Set @w_sql = Concat(@w_insertErrores,
                    ' Select p.ejercicio,   p.mes,       p.Referencia,  p.fecha_mov, m.Concepto, m.Moneda, m.Llave,
                             m.Importe,     m.Clave,     m.Cons,        Substring(Substring(m.Documento, 1, 20), 1, 20), m.Sector_id,
                             m.Sucursal_id, m.Region_id, m.fecCap, ',
                             @w_comilla, @w_mensaje, @w_comilla, ', 1 ',
                    ' From   dbo.movimientosAnio m With (Nolock)
                      Join   dbo.polizaAnio      P With (Nolock)
                      On     Cast(p.fecha_mov As Date) = Cast(m.fecha_mov As Date)
                      And    p.Referencia              = m.Referencia
                      And    p.ejercicio               = m.ejercicio
                      And    p.mes                     = m.mes
                      Where  1 = 1 ', @w_condicion,
                    ' And   Len(m.llave) != ', @w_length)

   Begin Try
      Execute (@w_sql)
      Set @w_registros = @@Rowcount;
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End

   Set @w_mensaje = 'Error Clave';

   Set @w_sql = Concat(@w_insertErrores,
              ' Select p.ejercicio,   p.mes,       p.Referencia,  p.fecha_mov, m.Concepto, m.Moneda, m.Llave,
                       m.Importe,     m.Clave,     m.Cons,        Substring(m.Documento, 1, 20), m.Sector_id,
                       m.Sucursal_id, m.Region_id, m.fecCap, ',
                       @w_comilla, @w_mensaje, @w_comilla, ', 2 ',
              ' From   dbo.movimientosAnio m With (Nolock)
                Join   dbo.polizaAnio P With (Nolock)
                On     Cast(p.fecha_mov As Date) = Cast(m.fecha_mov As Date)
                And    p.Referencia              = m.Referencia
                And    p.ejercicio               = m.ejercicio
                And    p.mes                     = m.mes
                Where  1 = 1 ', @w_condicion,
              ' And    Isnull(m.Clave, ',@w_comilla, 'X', @w_comilla, ') Not In  (', @w_comilla, 'C', @w_comilla, ', ',
                                                                                           @w_comilla, 'A', @w_comilla, ')');
   Begin Try
      Execute (@w_sql)
      Set @w_registros = @w_registros + @@Rowcount;
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch


   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End


   Set @w_mensaje = 'Error en Importe';

   Set @w_sql = Concat(@w_insertErrores,
                     ' Select p.ejercicio,   p.mes,      p.Referencia, p.fecha_mov, m.Concepto, m.Moneda, m.Llave,
                             m.Importe,     m.Clave,     m.Cons,        Substring(m.Documento, 1, 20), m.Sector_id,
                             m.Sucursal_id, m.Region_id, m.fecCap, ',
                             @w_comilla, @w_mensaje, @w_comilla, ', 3 ',
                    ' From   dbo.movimientosAnio m With (Nolock)
                      Join   dbo.polizaAnio P With (Nolock)
                      On     Cast(p.fecha_mov As Date) = Cast(m.fecha_mov As Date)
                      And    p.Referencia              = m.Referencia
                      And    p.ejercicio               = m.ejercicio
                      And    p.mes                     = m.mes
                      Where  1 = 1 ', @w_condicion,
                    ' And    Isnull(m.Importe, 0) = 0');
   Begin Try
      Execute (@w_sql)
      Set @w_registros = @w_registros + @@Rowcount;
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End

   Set @w_mensaje = 'No existe cuenta auxiliar en el catálogo dbo.CatalogoAuxiliar ';

   Set @w_sql = Concat(@w_insertErrores,
                    ' Select p.ejercicio,   p.mes,       p.Referencia,  p.fecha_mov, m.Concepto, m.Moneda, m.Llave,
                             m.Importe,     m.Clave,     m.Cons,        Substring(m.Documento, 1, 20), m.Sector_id,
                             m.Sucursal_id, m.Region_id, m.fecCap, ',
                             @w_comilla, @w_mensaje, @w_comilla, ', 4 ',
                    ' From   dbo.movimientosAnio m With (Nolock)
                      Join   dbo.polizaAnio      P With (Nolock)
                      On     Cast(p.fecha_mov As Date) = Cast(m.fecha_mov As Date)
                      And    p.Referencia              = m.Referencia
                      And    p.ejercicio               = m.ejercicio
                      And    p.mes                     = m.mes
                      Where  1 = 1 ', @w_condicion,
                    ' And    Not Exists ( Select Top 1 1 ',
                                        ' From   dbo.CatalogoAuxiliar With (Nolock) ',
                                        ' Where  Llave       = m.llave',
                                        ' And    Moneda      = m.moneda',
                                        ' And    Sector_id   = m.Sector_id',
                                        ' And    Sucursal_id = m.Sucursal_id)');

   Begin Try
      Execute (@w_sql)
      Set @w_registros = @w_registros + @@Rowcount;
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End

   If @PnConsulta = 4
      Begin
         If @w_registros = 0
            Begin
               Select @PnEstatus = 8167,
                      @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus);

               Set Xact_Abort Off
               Return
            End

         Select @PnEstatus = 8168,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus);

         Set @w_sql = Concat('Select ejercicio, mes, Referencia, Cast(Fecha_mov as Date) fecha, ',
                                     'Concat(Substring(llave, 1, 4), Char(45), ',
                                            'Substring(llave, 5, 2), Char(45), ',
                                            'Substring(llave, 7, 2), Char(45), ',
                                            'Substring(llave, 9, 2), ',
                                            'Substring(llave, 11,  6)) CuentaAuxiliar, ',
                                     'Sucursal_id sucursal, region_id region,',
                                     'Sector_id sector, Mens_Error Mensaje, idError ',
                             'From ' , @w_tablaErrores , ' p With (Nolock) ',
                            ' Where  1 = 1 ', @w_condicion)

         If @PnSalida = 2
            Begin
               Set @w_sql =  @w_sql + ' For Json Path, root(' + @w_comilla + 'Reporte' + @w_comilla + ')'
            End

         Begin Try
            Execute (@w_sql)
         End   Try

         Begin Catch
            Select  @w_Error   = @@Error,
                    @w_linea   = Error_line(),
                    @w_mensaje = Substring (Error_Message(), 1, 200)

         End   Catch

         If Isnull(@w_Error, 0) <> 0
            Begin
               Select @PnEstatus = @w_Error,
                      @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

               Set Xact_Abort Off
               Return
            End

         Set Xact_Abort Off
         Return

      End


   If @PnConsulta = 5
      Begin
         Select @PnEstatus             = 0,
                @PsMensaje             = Null;

         Execute dbo.spp_ActualizaCarAbo @PnEjercicio = @w_anio,
                                         @PnMes       = @w_mes,
                                         @PsCondicion = @w_condicion,
                                         @PnEstatus   = @PnEstatus  Output,
                                         @PsMensaje   = @PsMensaje  Output;

         Set Xact_Abort Off
         Return
      End

  Set @w_mensaje = '';


--
-- Cuentas Detalladas
--

   Set @w_sql = Concat('Insert Into #tempCuentas
                       (Llave, Moneda, Sucursal_id, Region_id)
                        Select m.Llave, m.Moneda, m.Sucursal_id, m.Region_id
                        From   dbo.polizaAnio      p With (Nolock)
                        Join   dbo.movimientosAnio m With (Nolock)
                        On     M.Referencia = P.Referencia
                        And    M.fecha_mov  = P.fecha_mov
                        And    m.ejercicio  = p.ejercicio
                        And    m.mes        = p.mes
                        Where  1 = 1 ', @w_condicion,  '
                        And    p.ejercicio  = ', @w_anio, '
                        And    p.mes        = ', @w_mes,
                       'And    p.Mes_Mov    = ', @w_comilla, @w_mesProc , @w_comilla, ' ',
                       'Group  By m.Llave, m.Moneda, m.Sucursal_id, m.Region_id');

   Begin Try
      Execute (@w_sql)
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End

--
-- Cuentas Corporativas
--

   Insert Into #tempCuentas
  (tipoCuenta, Llave, Moneda, Region_id)
   Select Distinct 'C', Llave, Moneda, Region_id
   From   #tempCuentas;

   Set @w_sql = Concat('Insert Into #tempCuentas
                       (tipoCuenta, Llave, Moneda, Sucursal_id, Region_id)
                        Select ', @w_comilla, 'T', @w_comilla, ', m.Llave, m.Moneda, m.Sucursal_id, m.Region_id
                        From   dbo.polizaAnio      p With (Nolock)
                        Join   dbo.movimientosAnio m With (Nolock)
                        On     M.Referencia = P.Referencia
                        And    M.fecha_mov  = P.fecha_mov
                        And    m.ejercicio  = p.ejercicio
                        And    m.mes        = p.mes
                        Where  1 = 1 ', @w_condicion,
                      ' And    p.ejercicio  = ', @w_anio, '
                        And    p.mes        = ', @w_mes,
                       'Group  By m.Llave, m.Moneda, m.Sucursal_id, m.Region_id');

   Begin Try
      Execute (@w_sql)
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End

--


   Set @w_sql = Concat('Insert Into #TempCuentasInexistentes
                       (Llave, Moneda, Sucursal_id, Region_id)
                        Select Distinct Llave, Moneda, Sucursal_id, Region_id
                        From   #tempCuentas a
                        Where  tipoCuenta = ', @w_comilla, 'T', @w_comilla,
                      ' And    Not Exists ( Select Top 1 1
                                            From   dbo.CatalogoAuxiliar With (Nolock) ',
                                          ' Where  Llave       = a.llave
                                            And    Moneda      = a.moneda
                                            And    Sucursal_id = a.Sucursal_id
                                            And    Region_id   = a.region_id
                                            And    ejercicio   = ', @w_anio,
                                          ' And    mes         = ', @w_mes, ')');

   Begin Try
      Execute (@w_sql)
   End   Try

   Begin Catch
      Select  @w_Error   = @@Error,
              @w_linea   = Error_line(),
              @w_mensaje = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_mensaje, 'en Línea ', @w_linea);

         Set Xact_Abort Off
         Return
      End

--
--
--
   Set Xact_Abort    Off
   Return

End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 
--
-- Comentarios.
--

Declare
   @w_valor          Varchar(1500) = 'Realizar consultas para la pantalla de cargos y abonos.',
   @w_procedimiento  Varchar( 100) = 'Spc_cifrasCargosAbonos'


If Not Exists (Select Top 1 1
               From   sys.extended_properties a
               Join   sysobjects  b
               On     b.xtype   = 'P'
               And    b.name    = @w_procedimiento
               And    b.id      = a.major_id)

   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'Dbo',
                                      @level1type = 'Procedure',
                                      @level1name = @w_procedimiento;

   End
Else
   Begin
      Execute sp_updateextendedproperty @name       = 'MS_Description',
                                        @value      = @w_valor,
                                        @level0type = 'Schema',
                                        @level0name = N'Dbo',
                                        @level1type = 'Procedure',
                                        @level1name = @w_procedimiento
   End
1> 2> 
