1> 2> Use msdb
1> 2> 3> 4> 5> 6> 7> 8> 9> Configuration option 'show advanced options' changed from 1 to 1. Run the
RECONFIGURE statement to install.

--
-- Programador: Pedro Zambrano
-- Fecha:       17-sep-2024.
-- Observación: Script de Activación del Servicio de envío de correo.
--

sp_configure 'show advanced options', 1;
1> 2> Reconfigure;
1> 2> Configuration option 'Database Mail XPs' changed from 1 to 1. Run the
RECONFIGURE statement to install.
sp_configure 'Database Mail XPs', 1;
1> 2> Reconfigure
1> 1> 2> Use msdb
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 
--
-- Programador: Pedro Zambrano
-- Fecha:       17-sep-2024.
-- Observación: Script de creación del Perfil de correo para Incidencias Cierre Periodo.
--

If Not Exists(Select top 1 1         
              From   msdb.dbo.sysmail_profile    
              Where  name = 'Incidencias Cierre Periodo')  
   Begin
      Execute msdb.dbo.sysmail_add_account_sp   @account_name     = N'Incidencias Cierre Periodo',      
                                                @description      = N'Incidencias Cierre Periodo' ,      
                                                @email_address    = N'comunicaciondes@dalton.com.mx'  ,     
                                                @display_name     = 'Incidencias Cierre Periodo',      
                                                @username         = 'comunicaciones_des',    
                                                @password         = 'm3la8-Bc',     
                                                @port             = 2525,
                                                @enable_ssl       = 1,                          
                                                @mailserver_name  = '10.1.1.15'
	  
      Execute msdb.dbo.sysmail_add_profile_sp   @profile_name     = N'Incidencias Cierre Periodo' ,      
                                                @description      = N'Incidencias Cierre Periodo'      
            
      -- Add the account to the profile      
	  
      Execute msdb.dbo.sysmail_add_profileaccount_sp  @profile_name    = N'Incidencias Cierre Periodo',      
                                                      @account_name    = N'Incidencias Cierre Periodo',      
                                                      @sequence_number = 1 
   End
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> --
-- Observación: Script de alta de mensajes de error en envío de correo.
-- Fecha:       19-sep-2024.
-- Programador: Pedro Zambrano
--

Begin
   Delete dbo.catMensajesErroresTbl
   Where  idFormulario   = 9999
   And    idError  Between 120 And 141;

   Insert Into dbo.catMensajesErroresTbl (idFormulario, idError, mensaje, idUsuarioAct, ipAct)
   Select 9999, 120, 'El Encabezado del Correo No es Valido', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 121, 'El cuerpo del Correo no es Valido', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 122, 'El Codigo Grupo Receptor Correo ya se Encuentra Registrado.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 123, 'EL Grupo Receptor de Correo ya Existe.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 124, 'El Grupo Receptor de Correo No existe.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 125, 'El Grupo Receptor de Correo Se encuentra Inhabilitado.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 126, 'No Existe el Registro de Grupo Receptor Correo Detalle.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 127, 'El Perfil de Correo no es Válido.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 128, 'El Motivo de Emisión de Correo Seleccionado No es Válido.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 129, 'El Correo Emisor Seleccionado No Existe.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 130, 'No se Envia Correo ya que el Es Estatus Seleccionado no es Valido.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 131, 'El Usuario de Correo Receptor Seleccionado No Existe.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 132, 'El Correo No esta Activo', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 133, 'No se Envia Correo por que No existen Correos de Receptores.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 134, 'El correo del usuario Receptor seleccionado no Válido', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 135, 'La Cadena de Parámetros de entrada no es tipo Json', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 136, 'La Cadena de Parámetros de entrada no tiene registros.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 137, 'La Cadena de Parámetros de entrada contiene mas de 1 registro.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 138, 'No Existen Información de cierre para el ejercicio Seleccionado.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 139, 'No esta Cargado el Dia y Mes de Inicio y Fin Para Proceso de fin ejercicio.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 140, 'No Existe ejercicio para actualizar.', 1, dbo.Fn_buscaDireccionIP()
   Union
   Select 9999, 141, 'No Existe el Período para actualizar.', 1, dbo.Fn_buscaDireccionIP();


End
(0 rows affected)
(22 rows affected)
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> --
-- Observación: Script de creación de tabla de Grupos Receptores de Correo.
-- Programador: Pedro Zambrano
-- Fecha:       19-sep-2024.
--

If Exists ( Select Top 1 1
            From   Sysobjects
            Where  Uid = 1
            And    Type = 'U'
            And    Name = 'conGrupoReceptorCorreoDetTbl')
   Begin
      Drop Table dbo.conGrupoReceptorCorreoDetTbl
   End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 

If Exists ( Select Top 1 1
            From   Sysobjects
            Where  Uid = 1
            And    Type = 'U'
            And    Name = 'conGrupoReceptorCorreoTbl')
   Begin
      Drop Table dbo.conGrupoReceptorCorreoTbl
   End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 
Create Table dbo.conGrupoReceptorCorreoTbl
  (idGrupo      Integer        Not Null Identity (1, 1),
   codigoGrupo  Varchar(20)    Not Null,
   nombre       Varchar(100)   Not Null,
   idEstatus    Bit            Not Null Default 1,
   idUsuarioAct Varchar(10)    Not Null Default Char(32),
   fechaAct     Datetime       Not Null Default Getdate(),
   ipAct        Varchar(30)        Null Default Char(32),
 Constraint conGrupoReceptorCorreoPk 
 Primary Key (idGrupo),
 Index  conGrupoReceptorCorreoIdx01 Unique (codigoGrupo))
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 
--
-- Comentarios.
--

Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Catálogo de Grupo de Receptores de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Identificador Único de Grupo de Receptores de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo', 
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idGrupo';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Código Único de Grupo de Receptores de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo', 
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'codigoGrupo';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 


Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Nombre del Grupo de Receptores de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'nombre'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Identificador del Estatus del Registro. 0 = Inhabilito, 1 = Activo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idEstatus'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Identificador del Último Usuario que Actualizó el Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idUsuarioAct'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Última Fecha de Actualización del Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'fechaAct'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Última Dirección IP desde Donde se Actualizo el Registro.',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'ipAct'
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> --
-- Observación: Script de creación de tabla de detalle de los Grupos Receptores de Correo.
-- Programador: Pedro Zambrano
-- Fecha:       19-sep-2024.
--

If Exists ( Select Top 1 1
            From   Sysobjects
            Where  Uid = 1
            And    Type = 'U'
            And    Name = 'conGrupoReceptorCorreoDetTbl')
   Begin
      Drop Table dbo.conGrupoReceptorCorreoDetTbl
   End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 

Create Table dbo.conGrupoReceptorCorreoDetTbl
  (idGrupo        Integer        Not Null,
   correoReceptor Varchar(250)   Not Null,
   nombre         Varchar(250)   Not Null,
   idEstatus      Bit            Not Null Default 1,
   idUsuarioAct   Varchar(10)    Not Null Default Char(32),
   fechaAct       Datetime       Not Null Default Getdate(),
   ipAct          Varchar(30)        Null Default Char(32),
 Constraint conGrupoReceptorCorreoDetPk
 Primary Key Clustered (idGrupo, CorreoReceptor),
 Constraint  conGrupoReceptorCorreoDetFk01
 Foreign Key(idGrupo)
 References dbo.conGrupoReceptorCorreoTbl (idGrupo)
On Delete Cascade)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 
--
-- Comentarios
--

Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Catálogo Detalle de Grupo de Receptores de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Identificador Único de Grupo de Receptores de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idGrupo';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Correo del Receptor de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Column',
                                   @level2name = N'CorreoReceptor';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Identificador del Estatus del Registro. 0 = Inactivo, 1 = Activo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idEstatus';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Identificador del Último Usuario que Actualizó el Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idUsuarioAct';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Última Fecha de Actualización del Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Column',
                                   @level2name = N'fechaAct';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Última Dirección IP desde Donde se Actualizo el Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Column',
                                   @level2name = N'ipAct';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'LLave Foránea de Grupo de Correos',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conGrupoReceptorCorreoDetTbl',
                                   @level2type = N'Constraint',
                                   @level2name = N'conGrupoReceptorCorreoDetFk01';
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> --
-- Observación: Script de creación del trigger de la tabla conGrupoReceptorCorreoDetTbl
-- Programador: Pedro Zambrano
-- Fecha:       19-sep-2024.
--

Create Or Alter Trigger dbo.trinsConGrupoReceptorCorreoDetTbl
On    dbo.conGrupoReceptorCorreoDetTbl
After Insert, Update
As

Begin
    Declare
        @w_idGrupo          Integer,
        @w_ipAct            Varchar( 30),
        @w_error            Integer,
        @w_correoReceptor   Varchar(250),
        @w_mensaje          Varchar(250),
        @w_idEstatus        Bit,
        @w_operacion        Integer,
        @w_fechaAct         Datetime;

   Begin
      Select @w_idGrupo           = idGrupo,
             @w_correoReceptor    = correoReceptor,
             @w_ipAct             = ipAct,
             @w_fechaAct          = fechaAct,
             @w_Operacion         = 9999
      From   Inserted
      If @@Rowcount = 0
         Begin
            Return
         End

      Select @w_idEstatus = idEstatus
      From   dbo.conGrupoReceptorCorreoTbl
      Where  idGrupo = @w_idGrupo;
      If @@Rowcount = 0
         Begin
            Select @w_error   = 124,
                   @w_mensaje = 'Error..: ' + dbo.Fn_Busca_MensajeError(@w_operacion, @w_error)

            Raiserror (@w_mensaje, 16, 1)
            Rollback Transaction
            Return
         End

      If @w_idEstatus != 1
         Begin
            Select @w_error   = 125,
                   @w_mensaje = 'Error..: ' + dbo.Fn_Busca_MensajeError(@w_operacion, @w_error)

            Raiserror (@w_mensaje, 16, 1)
            Rollback Transaction
            Return
         End

      If dbo.fn_validacorreo(@w_correoReceptor) = 0
         Begin
            Select @w_error   = 134,
                   @w_mensaje = 'Error..: ' + dbo.Fn_Busca_MensajeError(@w_operacion, @w_error)

            Raiserror (@w_mensaje, 16, 1)
            Rollback Transaction
            Return
         End

      Update dbo.conGrupoReceptorCorreoDetTbl
      Set    ipAct    = Isnull(@w_ipAct, dbo.fn_buscaDireccionIP()),
             fechaAct = Isnull(@w_fechaAct, Getdate())
      Where  idGrupo  = @w_idGrupo;

   End

   Return

End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 
--
-- Comentarios.
--

Declare
   @w_valor          Varchar(1500) = 'Valida el registro a actualizar del detalle del Grupo Receptor',
   @w_trigger        Varchar( 100) = 'trinsConGrupoReceptorCorreoDetTbl'

If Not Exists (Select Top 1 1
               From   sysobjects  b
               Join   sys.extended_properties a
               On     a.major_id = b.id
               Where  b.name     = @w_trigger
               And    b.type     = 'Tr')
   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'Dbo',
                                      @level1type = 'Table',
                                      @level1name = N'conGrupoReceptorCorreoDetTbl',
                                      @level2type = 'Trigger',
                                      @level2name = @w_trigger

   End
Else
   Begin
      Execute  sp_Updateextendedproperty @name       = N'MS_Description',
                                         @value      = @w_valor,
                                         @level0type = 'Schema',
                                         @level0name = N'Dbo',
                                         @level1type = 'Table',
                                         @level1name = N'conGrupoReceptorCorreoDetTbl',
                                         @level2type = 'Trigger',
                                         @level2name = @w_trigger
   End
1> 2> 
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> --
-- Observación: Script de alta de Grupo de correo.
-- Programador: Pedro Zambrano
-- Fecha:       19-sep-2024.
--

Declare
   @w_idGrupo           Integer,
   @w_idusuario         Varchar(  Max),
   @w_desc_error        Varchar(  250),
   @w_Error             Integer,
   @w_linea             Integer,
   @w_usuario           Varchar(   10),
   @w_ipAct             Varchar(   30),
   @w_codigoGrupo       Varchar(   20),
   @w_correoReceptor    Varchar(  250),
   @w_nombre            Varchar(  250),
   @w_consulta          NVarchar(1500),
   @w_param             NVarchar( 750);

Begin
   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    Off
--
-- Obtención del usuario de la aplicación para procesos batch.
--

   Select @w_codigoGrupo    = 'GrupoCierre',
          @w_correoReceptor = 'pzambrano.zepga@hotmail.com',
          @w_nombre         = 'Pedro Zambrano',
          @w_ipAct          = dbo.Fn_buscaDireccionIp();

   Select @w_idusuario = parametroChar
   From   dbo.conParametrosGralesTbl
   Where  idParametroGral = 6;

   Select @w_consulta   = Concat('Select @o_usuario = dbo.Fn_Desencripta_cadena (', @w_idusuario, ')'),
          @w_param      = '@o_usuario    Nvarchar(20) Output';

   Begin Try
      Execute Sp_executeSql @w_consulta, @w_param, @o_usuario = @w_usuario Output
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_error, 0) != 0
      Begin
         Select @w_error, @w_desc_error;

         Set Xact_Abort    Off
         Return
      End

   Select @w_idGrupo = idGrupo
   From   dbo.conGrupoReceptorCorreoTbl
   Where  codigoGrupo = @w_codigoGrupo
   If @@Rowcount = 0
      Begin
         Insert Into dbo.conGrupoReceptorCorreoTbl
        (codigoGrupo, nombre, idUsuarioAct, ipAct)
         Select @w_codigoGrupo, 'Grupo de Correo de Cierre Ejercicio', @w_usuario, @w_ipAct
         Set @w_idGrupo = @@Identity
      End

   If Not Exists ( Select Top 1 1
                   From   dbo.conGrupoReceptorCorreoDetTbl
                   Where  idGrupo        = @w_idGrupo
                   And    correoReceptor = @w_correoReceptor)
      Begin
         Insert Into dbo.conGrupoReceptorCorreoDetTbl
        (idGrupo, correoReceptor, nombre, idUsuarioAct, ipAct)
         Select @w_idGrupo, @w_correoReceptor, @w_nombre, @w_usuario, @w_ipAct
      End

   Select @w_correoReceptor = 'carlos.urbina@sian.com.mx',
          @w_nombre         = 'Carlos Urbina';

   If Not Exists ( Select Top 1 1
                   From   dbo.conGrupoReceptorCorreoDetTbl
                   Where  idGrupo        = @w_idGrupo
                   And    correoReceptor = @w_correoReceptor)
      Begin
         Insert Into dbo.conGrupoReceptorCorreoDetTbl
        (idGrupo, correoReceptor, nombre, idUsuarioAct, ipAct)
         Select @w_idGrupo, @w_correoReceptor, @w_nombre, @w_usuario, @w_ipAct
      End

   Set Xact_Abort    Off
   Return

End
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> --
-- Observación: Script de creación de tabla de Motivos de Correo.
-- Programador: Pedro Zambrano
-- Fecha:       19-sep-2024.
--

If Exists ( Select Top 1 1
            From   Sysobjects
            Where  Uid = 1
            And    Type = 'U'
            And    Name = 'conMotivosCorreoTbl')
   Begin
      Drop Table dbo.conMotivosCorreoTbl
   End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 
Create Table dbo.conMotivosCorreoTbl
  (idMotivoCorreo        Integer            Not Null Identity (1, 1),
   codigoMotivoCorreo    Varchar(   30)     Not Null,
   descripcion           Varchar(  100)     Not Null,
   titulo                Varchar( 1000)         Null,
   cuerpo                Nvarchar( Max)         Null,
   html                  Nvarchar( Max)         Null,
   URL                   Varchar( 1000)         Null,
   idEstatus             Bit                Not Null Default 1,
   idUsuarioAct          Varchar(   10)     Not Null,
   fechaAct              Datetime           Not Null Default Getdate(),
   ipAct                 Varchar(   30)         Null,
 Constraint conMotivosCorreoPk
 Primary Key Clustered (idMotivoCorreo),
 Index conMotivosCorreoIdx01 Unique (codigoMotivoCorreo));
1> 2> 3> 4> 5> 6> 7> 8> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Catálogo de Configuración de Motivos de Emisión de Correos.',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Identificador Único de Motivo de Emisión de Correo' ,
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idMotivoCorreo'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Código Único de Motivo de Emisión de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'codigoMotivoCorreo'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Descripción del Motivo de Emisión de Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'descripcion'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 

Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Titulo del Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'titulo'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Texto del Correo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'cuerpo'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Texto del Correo  en Formato HTML',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'html';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description',
                                   @value      = N'Dirección URL que se requiere llamar.',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'URL';
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Identificador del Estatus del Registro. 0 = Inhabilito, 1 = Activo',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idEstatus'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Identificador del Último Usuario que Actualizó el Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'idUsuarioAct'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Última Fecha de Actualización del Registro',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'fechaAct'
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 
Execute sys.sp_addextendedproperty @name       = N'MS_Description', 
                                   @value      = N'Última Dirección IP desde Donde se Actualizo el Registro.',
                                   @level0type = N'Schema',
                                   @level0name = N'dbo',
                                   @level1type = N'Table',
                                   @level1name = N'conMotivosCorreoTbl',
                                   @level2type = N'Column',
                                   @level2name = N'ipAct'
1> 2> 3> 

1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> --
-- Objetivo:    Construye el Saludo.
-- Programador: Pedro Felipe Zambrano
-- Fecha:       18/09/2024
-- Versión:     1
--

Create Or Alter  Function dbo.Fn_calculaSaludo
()
Returns Char(20)
As

Begin
   Declare
      @o_salida             Varchar(20),
      @w_fecha              Datetime,
      @w_fecha1             Datetime,
      @w_fecha2             Datetime,
      @w_fecha3             Datetime,
      @w_fecha4             Datetime,
      @w_fecha5             Datetime,
      @w_fecha6             Datetime,
      @w_fecha7             Datetime;

   Begin
      Select @w_fecha              = Getdate(),
             @w_fecha1             = Cast(@w_fecha As Date),
             @w_fecha2             = Dateadd(second, 0.01,          @w_fecha1),
             @w_fecha3             = Dateadd(minute, ( 5 * 60),     @w_fecha1),
             @w_fecha4             = Dateadd(second, 0.01,          @w_fecha3),
             @w_fecha5             = Dateadd(minute, (12 * 60),     @w_fecha1),
             @w_fecha6             = Dateadd(second, 0.01,          @w_fecha5),
             @w_fecha7             = Dateadd(minute, (19 * 60),     @w_fecha1)


      Set @o_salida = Case When @w_fecha Between @w_fecha2 And @w_fecha3
                            Then 'Buenas Noches'
                            When @w_fecha Between @w_fecha4 And @w_fecha5
                            Then 'Buenos Días'
                            When @w_fecha Between @w_fecha6 And @w_fecha7
                            Then 'Buenas Tardes'
                            Else 'Buenas Noches'
                       End
   End

   Return(@o_salida)

End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 
--
-- Comentarios
--

Declare
   @w_valor          Nvarchar(250) = 'Función que Construye el saludo.',
   @w_procedimiento  NVarchar(250) = 'Fn_calculaSaludo';

If Not Exists (Select Top 1 1
               From   sys.extended_properties a
               Join   sysobjects  b
               On     b.xtype   = 'Fn'
               And    b.name    = @w_procedimiento
               And    b.id      = a.major_id)
   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'dbo',
                                      @level1type = 'Function', 
                                      @level1name = @w_procedimiento

   End
Else
   Begin
      Execute sp_updateextendedproperty @name       = 'MS_Description',
                                        @value      = @w_valor,
                                        @level0type = 'Schema',
                                        @level0name = N'dbo',
                                        @level1type = 'Function', 
                                        @level1name = @w_procedimiento
   End
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> --
-- Observación: Script de alta de Motivo de correo.
-- Programador: Pedro Zambrano
-- Fecha:       19-sep-2024.
--

Declare
   @w_idusuario             Varchar(  Max),
   @w_desc_error            Varchar(  250),
   @w_Error                 Integer,
   @w_linea                 Integer,
   @w_idMotivo              Integer,
   @w_usuario               Varchar(   10),
   @w_ipAct                 Varchar(   30),
   @w_codigoMotivoCorreo    Varchar(   30),
   @w_descripcion           Varchar(  100),
   @w_titulo                Varchar( 1000),
   @w_html                  NVarchar( Max),
   @w_consulta              NVarchar(1500),
   @w_param                 NVarchar( 750);

Begin
   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    Off

--
-- Obtención del usuario de la aplicación para procesos batch.
--

   Select @w_html    = '<!DOCTYPE html>
    <html lang="es">
        <tbody>
                <p>&saludos&, &Nombre&
                <p  style="margin:0 0 12px 0;font-size:16px;line-height:24px;font-family:Arial,sans-serif;color:#153643">
                    Por medio del presente te informamos que el proceso de cierre &observacion& y el detalle del proceso es el siguiente:

                <p> Ejecicio:             &Ejercicio&
                <p> Cierre Procesado por: &usuario&
                <p> Fecha de cierre:      &fechaproc&
                ',
          @w_codigoMotivoCorreo = 'CierrePeriodo',
          @w_titulo             = 'Cierre periodo &periodo&',
          @w_descripcion        = 'Incidencias Cierre Periodo',
          @w_ipAct              = dbo.Fn_buscaDireccionIp();

   Select @w_idusuario = parametroChar
   From   dbo.conParametrosGralesTbl
   Where  idParametroGral = 6;

   Select @w_consulta   = Concat('Select @o_usuario = dbo.Fn_Desencripta_cadena (', @w_idusuario, ')'),
          @w_param      = '@o_usuario    Nvarchar(20) Output';

   Begin Try
      Execute Sp_executeSql @w_consulta, @w_param, @o_usuario = @w_usuario Output
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_error, 0) != 0
      Begin
         Select @w_error, @w_desc_error;

         Set Xact_Abort    Off
         Return
      End

   Select @w_idMotivo = idMotivoCorreo
   From   dbo.conMotivosCorreoTbl
   Where  codigoMotivoCorreo = @w_codigoMotivoCorreo;
   If @@rowcount != 0
      Begin
         Select @w_idMotivo idMotivoCorreo

         Set Xact_Abort    Off
         Return
      End

   Begin Try
      Insert Into dbo.conMotivosCorreoTbl
     (codigoMotivoCorreo, descripcion, titulo, html,
      idUsuarioAct,       ipAct)
      Select @w_codigoMotivoCorreo, @w_descripcion, @w_titulo, @w_html,
             @w_usuario,            @w_ipAct
      Select @w_idMotivo = @@Identity;
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 200)

   End   Catch

   If Isnull(@w_error, 0) != 0
      Begin
         Select @w_error, @w_desc_error;

         Set Xact_Abort    Off
         Return
      End

   Select @w_idMotivo idMotivoCorreo
   Set Xact_Abort    Off
   Return

End
 idMotivoCorreo 
 -------------- 
              1 

1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 
/*
-- Declare
--    @PsConsulta           NVarchar(Max) = 'Select * from ',
--    @PsOrdenPres          NVarchar(Max) = Null,
--    @PsHTML               NVarchar(Max) = Null,
--    @PnEstatus            Integer       = 0,
--    @PsMensaje            Varchar(250)  = Null
-- Begin
--    Execute dbo.Spp_ProcesaConsultaHtmlTable @PsConsulta  = @PsConsulta,
--                                             @PsOrdenPres = @PsOrdenPres,
--                                             @PsHTML      = @PsHTML    Output,
--                                             @PnEstatus   = @PnEstatus Output,
--                                             @PsMensaje   = @PsMensaje Output;
--    If @PnEstatus != 0
--       Begin
--          Select @PnEstatus As Error, @PsMensaje As Mensaje;
--       End
-- 
--    Return
-- 
-- End;
-- Go
-- 
-- 
-- 
-- Objetivo:    Construye una tabla XML desde una consulta SQL para presentarla en HTML.
-- Programador: Pedro Felipe Zambrano
-- Fecha:       18/09/2024
-- Versión:     1

*/


Create Or Alter Procedure dbo.Spp_ProcesaConsultaHtmlTable
  (@PsConsulta           NVarchar(Max),
   @PsOrdenPres          NVarchar(Max) = Null,
   @PsHTML               NVarchar(Max) = Null Output,
   @PnEstatus            Integer       = 0    Output,
   @PsMensaje            Varchar(250)  = Null Output)
As

Declare
   @w_desc_error        Varchar( 250),
   @w_error             Integer,
   @w_linea             Integer,
   @w_consulta          NVarchar(Max),
   @w_sql               Varchar(Max),
   @w_comilla           Char(1),
   @w_tabla             Sysname,
   @w_registros         Integer,
   @w_secuencia         Integer,
   @w_columna           Sysname,
   @w_titcol            Sysname,
   @w_columnas          NVarchar(Max),
   @w_param             NVarchar(750),
   @w_titulosCol        NVarchar(Max),
   @w_idTipo            Integer;

Begin

   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    Off

--
-- Inicializamos Variables
--

   Select @PnEstatus    = 0,
          @PsMensaje    = '',
          @w_comilla    = Char(39),
          @w_secuencia  = 0,
          @PsOrdenPres  = Isnull(@PsOrdenPres, ''),
          @w_tabla      = 'TmpHtml_' + Substring(Replace(Cast(newid() As Varchar(100)), '-', ''), 1, 30);

--
-- Creación de Tablas de Trabajo.
--

   Create Table #TempTabla
   (secuencia           Integer  Not Null Identity (1, 1) Primary Key,
    nombre              Sysname,
    idTipo              Integer);

--

   If Exists ( Select Top 1 1
               From   sys.objects
               Where  name = @w_tabla)
      Begin
         Set @w_sql = 'Drop Table ' + @w_tabla
         Execute(@w_sql)
      End

   Set @w_sql = 'Select *
                 Into   ' + @w_tabla + '
                 From (' + @PsConsulta + ') sub;';

   Begin Try
      Execute(@w_sql);
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 230)
   End   Catch
   
   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);
   
         Set Xact_Abort Off
         Return
   
      End

   Set @w_sql = 'Alter Table ' + @w_tabla + ' Add secuencia Integer Not Null Identity (1, 1) Primary Key'
   Execute(@w_sql)

   Set @w_sql = 'Select name, system_type_id
                 From   sys.columns
                 Where  object_id = object_id(' + @w_comilla + @w_tabla + @w_comilla + ')
                 And    name     != ' + @w_comilla + 'secuencia' + @w_comilla + '
                 Order  By column_id'

   Begin Try
      Insert Into #TempTabla
      (nombre, idTipo)
      Execute (@w_sql)
   End Try

   Begin Catch
      Select  @w_Error      = @@Error,
              @w_linea      = Error_line(),
              @w_desc_error = Substring (Error_Message(), 1, 230)
   End   Catch
   
   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_error,
                @PsMensaje = Concat('Error.: ', @w_Error, ' ', @w_desc_error, ' en Línea ', @w_linea);
   
         Set Xact_Abort Off
         Return
   
      End

   Set @w_registros = @@Identity

   While @w_secuencia < @w_registros
   Begin
      Set @w_secuencia = @w_secuencia + 1
      Select @w_columna = Concat('[', nombre, '] As ', @w_comilla, 'td', @w_comilla),
             @w_titcol  = nombre,
             @w_idTipo  = idTipo
      From   #TempTabla
      Where  secuencia = @w_secuencia;
      If @@Rowcount = 0
         Begin
            Break
         End

      If @w_secuencia = 1
         Begin
            Select @w_columnas   = @w_columna,
                   @w_titulosCol = @w_titcol
         End
      Else
         Begin
            Set @w_titulosCol = Concat(@w_titulosCol, '<th>', @w_titcol, '</th>')

            If @w_idTipo In (56, 52, 48)
               Begin
                  Set @w_columnas   = Concat(@w_columnas, ', ', @w_comilla, '', @w_comilla + ', ', @w_columna)
               End
            Else
               Begin
                  Set @w_columnas   = Concat(@w_columnas, ', ', @w_comilla, '', @w_comilla + ', ', @w_columna)
               End
         End

   End

   Select @w_columnas = 'Select @PsSalida= Cast((Select ' + @w_columnas + '
                                                 From   ' + @w_tabla    + '
                                                 For    XML Path(' + @w_comilla + 'tr' + @w_comilla + ')) As NVarchar(Max))',
          @w_param    = N'@PsSalida NVarchar(Max) Output'

   Execute sys.sp_executesql @w_columnas, @w_param, @PsSalida = @PsHTML Output

   Set @w_titulosCol = Concat('<th>',@w_titulosCol, '</th>')

   Set @PsHTML = Concat('<table bOrder="1">', @w_titulosCol, @PsHTML,'</table>')

   Set @w_sql = 'Drop Table ' + @w_tabla
   Execute(@w_sql)

  Set Xact_Abort Off
  Return

End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 
--
-- Comentarios.
--

Declare
   @w_valor          Varchar(1500) = 'Construye una tabla XML desde una consulta SQL para presentarla en HTML.',
   @w_procedimiento  Varchar( 100) = 'Spp_ProcesaConsultaHtmlTable'


If Not Exists (Select Top 1 1
               From   sys.extended_properties a
               Join   sysobjects  b
               On     b.xtype   = 'P'
               And    b.name    = @w_procedimiento
               And    b.id      = a.major_id)

   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'Dbo',
                                      @level1type = 'Procedure',
                                      @level1name = @w_procedimiento;

   End
Else
   Begin
      Execute sp_updateextendedproperty @name       = 'MS_Description',
                                        @value      = @w_valor,
                                        @level0type = 'Schema',
                                        @level0name = N'Dbo',
                                        @level1type = 'Procedure',
                                        @level1name = @w_procedimiento
   End
1> 2> 
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 269> 270> 271> 272> 273> 274> 275> 276> 277> 278> 279> 280> 281> 282> 283> 284> 285> 286> 287> 288> 289> 290> 291> 292> 293> 294> 295> 296> 297> 298> 299> 300> 301> 302> 303> 304> 305> 306> 307> 308> 309> 310> 311> 312> 313> 314> 315> 316> 317> 318> 319> 320> 321> 322> 323> 324> 325> 326> 327> 328> 329> 330> 331> 332> 333> 334> 335> 336> 337> 338> 339> 340> /*

--Declare
--   @PsIdParametro           Varchar(Max) = '[{"CodigoMotivoCorreo":"CierrePeriodo", "codigoGrupo":"GrupoCierre", "Ejercicio":2024,"mes":13,"idlogIni":1,"idlogFin":999}]',
--   @PsIdUsuarioAct          Varchar(10)  = 'omedina',
--   @PnEstatus               Integer      = 0,
--   @PsMensaje               Varchar(250);
--
--Begin
--   Execute Spp_notificaResultadoCierre @PsIdParametro  = @PsIdParametro,
--                                       @PsIdUsuarioAct = @PsIdUsuarioAct,
--                                       @PnEstatus      = @PnEstatus Output,
--                                       @PsMensaje      = @PsMensaje Output;
--
--   If @PnEstatus != 0
--      Begin
--         Select @PnEstatus As Estatus, @PsMensaje As Mensaje
--     End
--
--   Return
--
--End
--Go

-- Objetivo:    Generera la notificación del resultado del proceso de cierre.
-- Programador: Pedro Felipe Zambrano
-- Fecha:       18/09/2024
-- Versión:     1

*/

Create Or Alter Procedure dbo.Spp_notificaResultadoCierre
  (@PsIdParametro           Varchar(Max),
   @PsIdUsuarioAct          Varchar(10),
   @PnEstatus               Integer      = 0    Output,
   @PsMensaje               Varchar(250) = Null Output)
As

Declare
   @w_error                    Integer,
   @w_desc_error               Varchar(  250),
   @w_registros                Integer,
   @w_secuencia                Integer,
   @w_sql                      NVarchar( 1500),
   @w_param                    NVarchar(  750),
   @w_comilla                  Char(1),
--
   @w_idEstatus                Tinyint,
   @w_idGrupo                  Integer,
   @w_idMotivoCorreo           Integer,
   @w_CodigoMotivoCorreo       Varchar(  30),
   @w_codigoGrupoCorreo        Varchar(  20),
   @w_fechaProc                Varchar(  30),
   @w_Hora                     Time(2),
   @w_account_name             Sysname,
--
   @w_comando                  Varchar(8000),
   @w_salida                   Varchar(8000),
   @w_html                     Nvarchar(Max),
   @w_html2                    Nvarchar(Max),
--
   @w_idReceptor               Integer,
   @w_body                     Varchar(Max),
   @w_saludo                   Varchar(100),
   @w_nombre                   Varchar(100),
   @w_correo                   Varchar(100),
   @w_asunto                   Varchar(250),
   @w_observacion              Varchar(100),
   @w_idCorreo                 Integer,
   @w_registrosUser            Integer,
--
   @w_anio                     Smallint,
   @w_mes                      Tinyint,
   @w_idlogIni                 Integer,
   @w_idlogFin                 Integer,
   @w_operacion                Integer;

Begin

   Set Nocount       On
   Set Xact_Abort    On
   Set Ansi_Nulls    Off

--
-- Inicializamos Variables
--

   Select @PnEstatus            = 0,
          @PsMensaje            = '',
          @w_comilla            = Char(39),
          @w_secuencia          = 0,
          @w_saludo             = '<p>' + dbo.Fn_calculaSaludo(),
          @w_operacion          = 9999,
          @w_fechaProc          = Convert(Char(10), Getdate(), 103),
          @w_hora               = Getdate(),
          @w_fechaProc          = Concat(@w_fechaProc, Char(32), @w_hora);

   If IsJson(@PsIdParametro) = 0
      Begin
         Select @PnEstatus  = 135,
                @PsMensaje  = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Set Xact_Abort Off
         Return
      End

--
-- Creación de Tablas Temporales
--

   Create Table #tempParametros
  (Secuencia            Integer      Identity (1, 1) Primary Key,
   CodigoMotivoCorreo   Varchar(30)  Not Null,
   codigoGrupo          Varchar(20)  Not Null,
   Ejercicio            Smallint     Not Null,
   mes                  Tinyint      Not Null,
   idlogIni             Integer      Not Null,
   idlogFin             Integer      Not Null)

   Create Table #TempGrupoReceptorCorreoDet
   (secuencia    Integer       Not Null Identity(1, 1) Primary Key,
    correo       Varchar(250)      Null,
    nombre       Varchar(100)      Null);

--
-- Búsqueda de Parámetros.
--

   Insert Into #tempParametros
   (CodigoMotivoCorreo, codigoGrupo, Ejercicio, mes, idlogIni, idlogFin)
   Select CodigoMotivoCorreo, codigoGrupo, Ejercicio, mes, idlogIni, idlogFin
   From   OpenJson (@PsIdParametro)
   With  (CodigoMotivoCorreo   Varchar(30),
          codigoGrupo          Varchar(20),
          Ejercicio            Smallint,
          mes                  Tinyint,
          idlogIni             Integer,
          idlogFin             Integer);
   Set @w_registros = @@Rowcount

   If @w_registros = 0
      Begin
         Select @PnEstatus = 136,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Set Xact_Abort Off
         Return
      End

   If @w_registros > 1
      Begin
         Select @PnEstatus = 137,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Set Xact_Abort Off
         Return
      End

   Select  @w_CodigoMotivoCorreo = CodigoMotivoCorreo,
           @w_codigoGrupoCorreo  = codigoGrupo,
           @w_anio               = Ejercicio,
           @w_mes                = mes,
           @w_idlogIni           = idlogIni,
           @w_idlogFin           = idlogFin
   From    #tempParametros

--
-- Inicio de Proceso
--

   Select  @w_idMotivoCorreo = idMotivoCorreo,
           @w_account_name = Cast(descripcion as Sysname),
           @w_html         = html,
           @w_asunto       = titulo
   From    dbo.conMotivosCorreoTbl With (Nolock)
   Where   CodigoMotivoCorreo  = @w_CodigoMotivoCorreo;
   If @@Rowcount = 0
      Begin
         Select @PnEstatus = 128,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Goto Salida
      End


--
-- Validación del parámetro de Grupo de Correo.
--

   Select @w_idGrupo   = idGrupo,
          @w_idEstatus = idEstatus
   From   dbo.conGrupoReceptorCorreoTbl
   Where  codigoGrupo = @w_codigoGrupoCorreo
   If @@Rowcount = 0
      Begin
         Select @PnEstatus = 124,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Goto Salida
      End

   If @w_idEstatus != 1
      Begin
         Select @PnEstatus = 125,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Goto Salida
      End

--
-- Consulta de los Usuarios Receptores de Correos.
--

   Begin Try
      Insert Into #TempGrupoReceptorCorreoDet
     (correo, nombre)
      Select correoReceptor, nombre
      From   dbo.conGrupoReceptorCorreoDetTbl
      Where  idGrupo   = @w_idGrupo
      And    idEstatus = 1
      Set @w_registrosUser = @@Identity
   End Try

   Begin Catch
      Select  @w_Error       = @@Error,
              @w_desc_error  = Substring (Error_Message(), 1, 230)
   End   Catch

   If Isnull(@w_Error, 0) <> 0
      Begin
         Select @PnEstatus = @w_Error,
                @PsMensaje = 'Error.: ' + Rtrim(Ltrim(Cast(@w_Error As Varchar))) + ' ' + @w_desc_error


         Set Xact_Abort Off
         Return
      End

   If @w_registrosUser = 0
      Begin
         Select @PnEstatus = 133,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Goto Salida
     End

--

   Select @w_registros = Count(1),
          @w_error     = Sum(Case When idError != 0
                                 Then 1
                                 Else 0
                            End)
   From   dbo.logCierreInicioEjercicioTbl With (Nolock)
   Where  idLog Between @w_idlogIni And @w_idlogFin;

   If @w_registros = 0
      Begin
         Select @PnEstatus = 138,
                @PsMensaje = dbo.Fn_Busca_MensajeError(@w_operacion, @PnEstatus)

         Goto Salida
     End

   If Isnull(@w_error, 0) = 0
      Begin
         Set @w_observacion = 'Termino Satisfactoriamente'
      End
   Else
      Begin
         Set @w_observacion = 'Termino con Errores'
      End

   Select @w_html = Replace(@w_html, '&saludos&',     Trim(@w_saludo)),
          @w_html = Replace(@w_html, '&Ejercicio&',   Cast(@w_anio As Varchar)),
          @w_html = Replace(@w_html, '&observacion&', Trim(@w_observacion)),
          @w_html = Replace(@w_html, '&usuario&',     Trim(@PsIdUsuarioAct)),
          @w_html = Replace(@w_html, '&fechaproc&',   Trim(@w_fechaproc));

--
-- Construcción del correo
--

   Set @w_sql = 'Select "Descripción"     = descripcion, ' +
                        '"ID Error"       = idError, '     +
                        '"Mensaje Error"  = Isnull(mensajeError, Char(32)) '   +
                'From   dbo.logCierreInicioEjercicioTbl With (Nolock) '    +
                'Where  idLog Between ' + Cast(@w_idlogIni As Varchar) + ' And ' + Cast(@w_idlogFin As Varchar)

   Execute dbo.Spp_ProcesaConsultaHtmlTable @PsConsulta   = @w_sql,
                                            @PsOrdenPres  = 'idLog ',
                                            @PsHTML       = @w_html2   Output,
                                            @PnEstatus    = @PnEstatus Output,
                                            @PsMensaje    = @PsMensaje Output;

   If @PnEstatus != 0
      Begin
         Goto Salida
      End
--

   Select @w_html = @w_html +   @w_html2,
         @w_html = @w_html + '</body></html>' + '<p>NOTA: Este correo es de caracter informativo, favor de NO Replicar y NO Responder</p> ' +
       '</tbody>
   </html>'

--

   While @w_secuencia < @w_registrosUser
   Begin
      Set @w_secuencia = @w_secuencia + 1

      Select @w_nombre = nombre,
             @w_correo = correo
      From   #TempGrupoReceptorCorreoDet
      Where  secuencia = @w_secuencia;
      If @@Rowcount = 0
         Begin
            Break
         End

      Set @w_body = Replace(@w_html, '&Nombre&', @w_nombre);

      Execute msdb.dbo.sp_send_dbmail @profile_name          = @w_account_name,
                                      @recipients            = @w_correo,
                                      @Subject               = @w_asunto,
                                      @Body                  = @w_body,
                                      @importance            = 'High',
                                      @body_format           = 'HTML',
                                      @mailitem_id           = @w_idCorreo Output

   End
--

Salida:

   Return

End
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 
--
-- Comentarios.
--

Declare
   @w_valor          Varchar(1500) = 'Generera la notificación del resultado del proceso de cierre.',
   @w_procedimiento  Varchar( 100) = 'Spp_notificaResultadoCierre'


If Not Exists (Select Top 1 1
               From   sys.extended_properties a
               Join   sysobjects  b
               On     b.xtype   = 'P'
               And    b.name    = @w_procedimiento
               And    b.id      = a.major_id)

   Begin
      Execute  sp_addextendedproperty @name       = N'MS_Description',
                                      @value      = @w_valor,
                                      @level0type = 'Schema',
                                      @level0name = N'Dbo',
                                      @level1type = 'Procedure',
                                      @level1name = @w_procedimiento;

   End
Else
   Begin
      Execute sp_updateextendedproperty @name       = 'MS_Description',
                                        @value      = @w_valor,
                                        @level0type = 'Schema',
                                        @level0name = N'Dbo',
                                        @level1type = 'Procedure',
                                        @level1name = @w_procedimiento
   End
1> 